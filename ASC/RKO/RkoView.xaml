<UserControl
	x:Class="ASC.RKO.RkoView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:converters="clr-namespace:ASC.Converters" xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:objects="clr-namespace:ASC.Objects" xmlns:extensions="clr-namespace:ASC.Extensions" xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
	Name="RkoWindow" xmlns:rko="clr-namespace:ASC.RKO"
	Loaded="{DXEvent OnLoad()}">
	<FrameworkElement.Resources>
		<ResourceDictionary>
			<converters:ZeroVisibilityConverter
				x:Key="ZeroVisibilityConverter" />
		</ResourceDictionary>
	</FrameworkElement.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition
				Height="71*" />
			<RowDefinition
				Height="90" />
		</Grid.RowDefinitions>
		<dxwui:AppBar
			Background="#3f3f3f"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			ItemSpacing="5"
			HideMode="AlwaysVisible"
			Grid.Row="1"
			Grid.ColumnSpan="2">
			<dxwui:AppBarButton
				Label="{DynamicResource Print}"
				Visibility="{Binding IsEditableInvert, Converter={StaticResource BooleanToVisibilityConverter}}"
				Command="{Binding PrintOrderCommand}"
				Glyph="{dx:DXImageGrayscale Image=Print_32x32.png}" />
			<dxwui:AppBarButton
				Label="{DynamicResource Save}"
				Visibility="{Binding Order.id, Converter={StaticResource ZeroVisibilityConverter}}"
				Command="{Binding SaveOrderCommand}"
				Glyph="{dx:DXImageGrayscale Image=Save_32x32.png}" />
		</dxwui:AppBar>
		<dxlc:LayoutControl
			MinWidth="500"
			MaxWidth="700"
			Orientation="Vertical"
			HorizontalAlignment="Right"
			Grid.Row="0"
			Margin="0,83,0,150">
			<dxlc:LayoutItem
				Label="{DynamicResource DateTime}">
				<dxe:DateEdit
					IsReadOnly="True"
					EditValue="{Binding Order.created, Converter={StaticResource UtcToLocalDateTimeConverter}}" />
			</dxlc:LayoutItem>
			<dxlc:LayoutItem
				Label="{DynamicResource OrgPay}">
				<dxe:ComboBoxEdit
					DisplayMember="Name"
					ValueMember="Id"
					ItemsSource="{Binding Companies, Source={x:Static objects:OfflineData.Instance}}"
					EditValue="{Binding Order.company, UpdateSourceTrigger=PropertyChanged}">
					<dxmvvm:Interaction.Behaviors>
						<dxmvvm:EventToCommand
							EventTriggerBase_x0060_1.EventName="EditValueChanged"
							Command="{Binding CompanyChangedCommand}" />
					</dxmvvm:Interaction.Behaviors>
				</dxe:ComboBoxEdit>
			</dxlc:LayoutItem>
			<dxlc:LayoutItem
				Label="{DynamicResource PaymentRecepient}">
				<DockPanel>
					<TextBox
						VerticalContentAlignment="Center"
						TextAlignment="Center"
						IsReadOnly="True"
						Width="90"
						Text="{Binding Order.client, StringFormat={}{0:D6}}" />
					<dxe:ButtonEdit
						IsReadOnly="True"
						AllowDefaultButton="False"
						EditValue="{Binding Agent.FioOrUrName, Mode=OneWay}">
						<dxe:ButtonEdit.Buttons>
							<dxe:ButtonInfo
								ToolTip="{DynamicResource Select}"
								Margin="0"
								GlyphKind="Search"
								Visibility="{Binding SelectAgentVisible, Converter={dx:BooleanToVisibilityConverter}}"
								Command="{Binding SelectAgentCommand}" />
							<dxe:ButtonInfo
								ToolTip="{DynamicResource Open}"
								Margin="0"
								GlyphKind="Right"
								Visibility="{Binding NavigateAgentVisible, Converter={dx:BooleanToVisibilityConverter}}"
								Command="{Binding NavigateAgentCommand}" />
						</dxe:ButtonEdit.Buttons>
					</dxe:ButtonEdit>
				</DockPanel>
			</dxlc:LayoutItem>
			<dxlc:LayoutItem
				Label=" "
				Visibility="{Binding Order.id, Converter={StaticResource ZeroVisibilityConverter}}">
				<CheckBox
					Name="CheckBoxReasonAutocomplete"
					Content="{DynamicResource ReasonAutocomplete}"
					IsChecked="{Binding ReasonAutocomplete}">
					<FrameworkElement.Style>
						<Style>
							<Style.Triggers>
								<DataTrigger
									Value="2"
									Binding="{Binding ElementName=ComboBoxType, Path=SelectedValue}">
									<Setter
										Property="IsEnabled"
										Value="False" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</FrameworkElement.Style>
				</CheckBox>
			</dxlc:LayoutItem>
			<dxlc:LayoutItem
				Label="{DynamicResource Summ}"
				HorizontalContentAlignment="Left">
				<dxe:TextEdit
					MaskType="Numeric"
					Mask="N2"
					MaskUseAsDisplayFormat="True"
					VerticalContentAlignment="Center"
					HorizontalAlignment="Right"
					Width="90"
					IsReadOnly="{Binding Order.id, Converter={dxmvvm:NumericToBooleanConverter}}"
					EditValue="{Binding Order.summa, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
					<dxmvvm:Interaction.Behaviors>
						<dxmvvm:EventToCommand
							EventTriggerBase_x0060_1.EventName="EditValueChanging"
							Command="{Binding SummChangedCommand}" />
						<extensions:SelectAllOnMouseUpBehavior />
					</dxmvvm:Interaction.Behaviors>
					<FrameworkElement.Style>
						<Style
							BasedOn="{StaticResource NumericTextBox}"
							TargetType="{x:Type dxe:TextEdit}">
							<Setter
								Property="dxe:BaseEdit.IsReadOnly"
								Value="False" />
							<Style.Triggers>
								<DataTrigger
									Value="2"
									Binding="{Binding Order.type}">
									<Setter
										Property="dxe:BaseEdit.IsReadOnly"
										Value="True" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</FrameworkElement.Style>
				</dxe:TextEdit>
			</dxlc:LayoutItem>
			<dxlc:LayoutItem
				HorizontalContentAlignment="Left"
				Label="{DynamicResource Balance}"
				Visibility="{Binding AgentBalanceVisible, Converter={dx:BooleanToVisibilityConverter}}">
				<dxe:TextEdit
					Focusable="False"
					Width="90"
					IsReadOnly="True"
					Style="{StaticResource NumericTextBox}"
					Foreground="{Binding Agent.BalanceColor}"
					EditValue="{Binding Agent.Balance, Mode=OneWay}" />
			</dxlc:LayoutItem>
			<dxlc:LayoutItem
				Label=" "
				Visibility="{Binding PrintKktChequeVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
				<dxe:CheckEdit
					Content="{DynamicResource PrintKktCheque}"
					EditValue="{Binding PrintKktCheque, Mode=TwoWay}" />
			</dxlc:LayoutItem>
			<dxlc:LayoutGroup
				ItemLabelsAlignment="Local"
				HorizontalAlignment="Right"
				VerticalAlignment="Bottom">
				<dxlc:LayoutItem
					Label="{DynamicResource Payment}">
					<dxe:ComboBoxEdit
						Margin="5,0,0,0"
						DisplayMember="Name"
						ValueMember="Id"
						Width="175"
						ItemsSource="{Binding PaymentOptionses, Source={x:Static objects:OfflineData.Instance}}"
						EditValue="{Binding Order.payment_system, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
						<dxe:ButtonEdit.Buttons>
							<dxe:ButtonInfo
								GlyphKind="Apply"
								Visibility="{Binding IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Self}}"
								Command="{Binding UpdatePaymentSystemCommand}" />
						</dxe:ButtonEdit.Buttons>
						<FrameworkElement.Style>
							<Style
								TargetType="{x:Type dxe:ComboBoxEdit}">
								<Setter
									Property="IsEnabled"
									Value="True" />
								<Style.Triggers>
									<DataTrigger
										Value="3"
										Binding="{Binding SelectedPaymentType.Id}">
										<Setter
											Property="IsEnabled"
											Value="False" />
									</DataTrigger>
									<DataTrigger
										Value="True"
										Binding="{Binding SelectedPaymentType.PaymentSystem, Converter={dxmvvm:NumericToBooleanConverter}}">
										<Setter
											Property="IsEnabled"
											Value="False" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</FrameworkElement.Style>
					</dxe:ComboBoxEdit>
				</dxlc:LayoutItem>
			</dxlc:LayoutGroup>
		</dxlc:LayoutControl>
		<Grid
			HorizontalAlignment="Stretch"
			Height="83"
			VerticalAlignment="Top">
			<Panel.Background>
				<ImageBrush
					ImageSource="../Resources/orderBg.jpg" />
			</Panel.Background>
			<Label
				Foreground="#FFFFFFFF"
				Content="{DynamicResource Number}"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				Margin="28,12,0,0" />
			<TextBox
				HorizontalAlignment="Left"
				VerticalContentAlignment="Center"
				HorizontalContentAlignment="Center"
				IsReadOnly="True"
				Margin="73,14,0,47"
				Width="115"
				Text="{Binding Order.id, StringFormat={}{0:D6}}">
				<FrameworkElement.Style>
					<Style>
						<Setter
							Property="Background"
							Value="#FF90EE90" />
						<Style.Triggers>
							<DataTrigger
								Value="0"
								Binding="{Binding Order.id}">
								<Setter
									Property="Background"
									Value="#FFD3D3D3" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</FrameworkElement.Style>
			</TextBox>
			<Separator
				HorizontalAlignment="Left"
				Height="40"
				Margin="144,22,0,0"
				Background="#00FFFFFF"
				VerticalAlignment="Top"
				Width="82"
				RenderTransformOrigin="0.5,0.5">
				<UIElement.RenderTransform>
					<TransformGroup>
						<ScaleTransform />
						<SkewTransform />
						<RotateTransform
							Angle="90" />
						<TranslateTransform />
					</TransformGroup>
				</UIElement.RenderTransform>
			</Separator>
			<Label
				Content="{DynamicResource PaymentType}"
				ContentStringFormat="{}{0}:"
				Foreground="#FFFFFFFF"
				HorizontalAlignment="Right"
				Margin="0,12,410,0"
				VerticalAlignment="Top" />
			<ComboBox
				Name="ComboBoxType"
				DisplayMemberPath="Name"
				SelectedValuePath="Id"
				HorizontalAlignment="Right"
				Margin="0,14,10,0"
				VerticalAlignment="Top"
				Width="395"
				IsReadOnly="{Binding Order.id, Converter={dxmvvm:NumericToBooleanConverter}}"
				IsEnabled="{Binding CanSelectPaymentType}"
				SelectedItem="{Binding SelectedPaymentType, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
				ItemsSource="{Binding RkoOptionses}"
				SelectedValue="{Binding Order.type}">
				<dxmvvm:Interaction.Behaviors>
					<dxmvvm:EventToCommand
						EventTriggerBase_x0060_1.EventName="SelectionChanged"
						Command="{Binding TypeChangedCommand}" />
				</dxmvvm:Interaction.Behaviors>
			</ComboBox>
			<Grid
				HorizontalAlignment="Right"
				Height="33"
				Margin="208,41,0,0"
				VerticalAlignment="Top"
				Width="486">
				<FrameworkElement.Style>
					<Style>
						<Setter
							Property="Visibility"
							Value="Collapsed" />
						<Style.Triggers>
							<DataTrigger
								Value="2"
								Binding="{Binding ElementName=ComboBoxType, Path=SelectedValue}">
								<Setter
									Property="Visibility"
									Value="Visible" />
							</DataTrigger>
							<DataTrigger
								Value="9"
								Binding="{Binding Order.type}">
								<Setter
									Property="Visibility"
									Value="Visible" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</FrameworkElement.Style>
				<Label
					Content="{DynamicResource Document}"
					Foreground="#FFFFFFFF"
					HorizontalAlignment="Right"
					Margin="0,0,410,0"
					VerticalAlignment="Top" />
				<TextBox
					HorizontalAlignment="Right"
					Height="23"
					VerticalContentAlignment="Center"
					TextAlignment="Center"
					Margin="0,3,315,0"
					IsReadOnly="True"
					VerticalAlignment="Top"
					Width="90"
					Text="{Binding Order.document, StringFormat={}{0:D6}}" />
				<Button
					Content="{DynamicResource Select}"
					HorizontalAlignment="Right"
					Margin="0,3,10,0"
					VerticalAlignment="Top"
					Width="116"
					Height="23"
					Command="{Binding SelectDocumentCommand}" />
				<Button
					Content="{DynamicResource Open}"
					HorizontalAlignment="Right"
					Margin="0,3,10,0"
					VerticalAlignment="Top"
					Width="116"
					Height="23"
					Command="{Binding OpenDocumentCommand}"
					Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Converter={dx:BooleanToVisibilityConverter}}" />
				<TextBox
					HorizontalAlignment="Right"
					VerticalContentAlignment="Center"
					Height="23"
					Margin="0,3,131,0"
					IsReadOnly="True"
					VerticalAlignment="Top"
					Width="179"
					Text="{Binding DocumentTypeName}" />
			</Grid>
		</Grid>
		<TextBox
			HorizontalAlignment="Stretch"
			AcceptsReturn="True"
			BorderThickness="0,1,0,0"
			Height="127"
			VerticalScrollBarVisibility="Visible"
			TextWrapping="Wrap"
			VerticalAlignment="Bottom"
			Text="{Binding Order.notes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
			<FrameworkElement.Style>
				<Style>
					<Setter
						Property="IsEnabled"
						Value="True" />
					<Style.Triggers>
						<DataTrigger
							Value="2"
							Binding="{Binding ElementName=ComboBoxType, Path=SelectedValue}">
							<Setter
								Property="IsEnabled"
								Value="False" />
						</DataTrigger>
						<DataTrigger
							Value="true"
							Binding="{Binding ElementName=CheckBoxReasonAutocomplete, Path=IsChecked}">
							<Setter
								Property="IsEnabled"
								Value="False" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</FrameworkElement.Style>
		</TextBox>
		<Border
			BorderThickness="0,1,0,0"
			BorderBrush="#FF000000"
			Margin="0,0,0,127.333"
			VerticalAlignment="Bottom">
			<Label
				Content="{DynamicResource Reason}"
				Margin="5,0,0,0"
				ContentStringFormat="{}{0}:"
				HorizontalAlignment="Left"
				VerticalAlignment="Bottom" />
		</Border>
		<Grid
			HorizontalAlignment="Right"
			Height="26"
			Margin="0,143,10,0"
			VerticalAlignment="Top"
			Width="480">
			<FrameworkElement.Style>
				<Style>
					<Setter
						Property="Visibility"
						Value="Visible" />
					<Style.Triggers>
						<DataTrigger
							Value="3"
							Binding="{Binding ElementName=ComboBoxType, Path=SelectedValue}">
							<Setter
								Property="Visibility"
								Value="Collapsed" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</FrameworkElement.Style>
		</Grid>
	</Grid>
</UserControl>
