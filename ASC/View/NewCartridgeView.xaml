<UserControl
	x:Class="ASC.View.NewCartridgeView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:local="clr-namespace:ASC.View" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui" xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:asc="clr-namespace:ASC" xmlns:converters="clr-namespace:ASC.Converters" xmlns:objects="clr-namespace:ASC.Objects"
	Loaded="{DXEvent OnLoad()}">
	<FrameworkElement.Resources>
		<ResourceDictionary>
			<dxmvvm:BooleanToVisibilityConverter
				Inverse="True"
				x:Key="ToVisibilityConverterInv" />
			<dxmvvm:NumericToBooleanConverter
				x:Key="NumericToBoolean" />
			<converters:FirstUpperConverter
				x:Key="FirstUpperConverter" />
			<converters:BoolInverterConverter
				x:Key="BoolInverterConverter" />
		</ResourceDictionary>
	</FrameworkElement.Resources>
	<DockPanel>
		<dxwui:AppBar
			Background="#3f3f3f"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			ItemSpacing="5"
			HideMode="AlwaysVisible"
			DockPanel.Dock="Bottom">
			<dxwui:AppBarButton
				Label="{DynamicResource Accept}"
				AllowGlyphTheming="True"
				HorizontalAlignment="Center"
				IsEllipseEnabled="False"
				Command="{Binding MakeOrderCommand}"
				Glyph="{dx:DXImageGrayscale Image=Save_32x32.png}" />
		</dxwui:AppBar>
		<DockPanel
			Dock="Left">
			<dxlc:LayoutControl
				ItemStyle="{StaticResource LeftMenuLayout}"
				Padding="10, 5, 0, 10"
				Orientation="Vertical"
				MaxWidth="300"
				Visibility="{Binding ElementName=ExpandButton, Path=IsChecked, Converter={dxmvvm:BooleanToVisibilityConverter}}">
				<dxlc:LayoutGroup>
					<dxlc:DataLayoutItem
						Visibility="{Binding CustomerInfoVisibility, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
						<dxe:ListBoxEdit
							Focusable="False"
							IsReadOnly="True"
							ItemsSource="{Binding CustomerInfo}">
							<dxe:ListBoxEdit.ItemTemplate>
								<DataTemplate>
									<Border
										Background="#00FFFFFF">
										<StackPanel
											Orientation="Horizontal">
											<TextBlock
												Text="{Binding Name}"
												Foreground="{Binding Color}" />
										</StackPanel>
									</Border>
								</DataTemplate>
							</dxe:ListBoxEdit.ItemTemplate>
						</dxe:ListBoxEdit>
					</dxlc:DataLayoutItem>
				</dxlc:LayoutGroup>
				<dxlc:LayoutItem
					Label="{DynamicResource Company}">
					<dxe:ComboBoxEdit
						MinWidth="100"
						ShowError="False"
						ValueMember="Id"
						DisplayMember="Name"
						EditValue="{Binding SelectedCompany, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						ItemsSource="{Binding Companies, Source={x:Static objects:OfflineData.Instance}}">
						<dxmvvm:Interaction.Behaviors>
							<dxmvvm:EventToCommand
								EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
								PassEventArgsToCommand="True"
								Command="{Binding ComboBoxClickCommand}" />
						</dxmvvm:Interaction.Behaviors>
					</dxe:ComboBoxEdit>
				</dxlc:LayoutItem>
				<dxlc:LayoutItem
					Label="{DynamicResource Office}">
					<dxe:ComboBoxEdit
						ShowError="False"
						ValueMember="id"
						DisplayMember="name"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Top"
						EditValue="{Binding SelectedOffice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						ItemsSource="{Binding Offices, Source={x:Static objects:OfflineData.Instance}}">
						<dxmvvm:Interaction.Behaviors>
							<dxmvvm:EventToCommand
								EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
								PassEventArgsToCommand="True"
								Command="{Binding ComboBoxClickCommand}" />
						</dxmvvm:Interaction.Behaviors>
					</dxe:ComboBoxEdit>
				</dxlc:LayoutItem>
				<dxlc:LayoutItem
					Label="{DynamicResource Payment}">
					<ComboBox
						DisplayMemberPath="Name"
						SelectedValuePath="Id"
						ItemsSource="{Binding PaymentOptionses, Source={x:Static objects:OfflineData.Instance}}"
						SelectedValue="{Binding SelectedPaymentType, Mode=TwoWay}" />
				</dxlc:LayoutItem>
				<dxlc:LayoutItem
					HorizontalContentAlignment="Right"
					Label="{DynamicResource CheckBoxExpressRepair}">
					<CheckBox
						Style="{StaticResource DefCheckBox}"
						IsChecked="{Binding ExpressRepair, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
				</dxlc:LayoutItem>
				<dxlc:LayoutItem>
					<dxe:ComboBoxEdit
						NullText="{DynamicResource SetMaster}"
						ValueMember="Uid"
						DisplayMember="Fio"
						VerticalAlignment="Center"
						ItemsSource="{Binding Masters}"
						EditValue="{Binding SelectedMaster, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
						<dxe:ButtonEdit.Buttons>
							<dxe:ButtonInfo
								GlyphKind="Cancel"
								Command="{Binding UnsetMasterCommand}" />
						</dxe:ButtonEdit.Buttons>
						<dxmvvm:Interaction.Behaviors>
							<dxmvvm:EventToCommand
								EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
								PassEventArgsToCommand="True"
								Command="{Binding ComboBoxClickCommand}" />
						</dxmvvm:Interaction.Behaviors>
					</dxe:ComboBoxEdit>
				</dxlc:LayoutItem>
				<dxlc:LayoutItem
					Label="{DynamicResource Stickers}">
					<dxe:SpinEdit
						Width="50"
						HorizontalAlignment="Right"
						ShowError="False"
						IsFloatValue="False"
						MinValue="1"
						MaxValue="9"
						EditValueType="{x:Type system:Int32}"
						EditValue="{Binding StickerCount, Mode=TwoWay}" />
				</dxlc:LayoutItem>
				<dxlc:LayoutItem
					Label="{DynamicResource Total}">
					<dxe:TextEdit
						IsReadOnly="True"
						EditValue="{Binding Total, Mode=OneWay}" />
				</dxlc:LayoutItem>
			</dxlc:LayoutControl>
			<Grid
				DockPanel.Dock="Left">
				<ToggleButton
					Name="ExpandButton"
					Style="{StaticResource HideButtonStyleLeft}"
					IsChecked="True"
					VerticalAlignment="Center" />
			</Grid>
		</DockPanel>
		<dxlc:LayoutControl
			Orientation="Vertical">
			<dxlc:LayoutGroup
				View="Tabs">
				<dxlc:LayoutGroup.TabsStyle>
					<Style
						TargetType="{x:Type dx:DXTabControl}">
						<Setter
							Property="dx:DXTabControl.ControlBoxLeftTemplate">
							<Setter.Value>
								<DataTemplate>
									<CheckBox
										VerticalAlignment="Center"
										Margin="0,0,5,0"
										Content="{DynamicResource Company}"
										IsChecked="{Binding Customer.IsUr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
								</DataTemplate>
							</Setter.Value>
						</Setter>
						<Setter
							Property="dx:DXTabControl.ContentFooterTemplate">
							<Setter.Value>
								<DataTemplate>
									<StackPanel
										Margin="0,5, 0 ,0"
										Orientation="Horizontal">
										<dx:SimpleButton
											Content="{DynamicResource SelectClient}"
											HorizontalAlignment="Left"
											VerticalAlignment="Bottom"
											Height="25"
											Command="{Binding SelectCustomerCommand}"
											Glyph="{DXImageGrayscale Image=Find_16x16.png}" />
										<dx:SimpleButton
											Padding="2,0"
											Command="{Binding UnsetClientCommand}"
											Glyph="{DXImageGrayscale Image=Close_16x16.png}" />
									</StackPanel>
								</DataTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</dxlc:LayoutGroup.TabsStyle>
				<dxlc:LayoutGroup
					Header="{DynamicResource Client}"
					Orientation="Vertical"
					Visibility="{Binding Customer.IsUr, Converter={StaticResource ToVisibilityConverterInv}}">
					<dxlc:LayoutGroup
						Orientation="Horizontal">
						<dxlc:LayoutItem>
							<dxe:TextEdit
								NullText="{DynamicResource Surname}"
								IsReadOnly="{Binding Customer.Id, Converter={StaticResource NumericToBoolean}}"
								IsEnabled="{Binding Customer.IsUr, Converter={StaticResource BoolInverterConverter}}"
								EditValue="{Binding Customer.LastName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource FirstUpperConverter}}"
								GotFocus="Ru_GotFocus">
								<dxmvvm:Interaction.Behaviors>
									<asc:TabOnSpaceBehavior />
									<dxmvvm:EventToCommand
										EventTriggerBase_x0060_1.EventName="EditValueChanged"
										Command="{Binding SearchClientMatchCommand}" />
								</dxmvvm:Interaction.Behaviors>
							</dxe:TextEdit>
						</dxlc:LayoutItem>
						<dxlc:LayoutItem>
							<dxe:TextEdit
								NullText="{DynamicResource Name}"
								IsReadOnly="{Binding Customer.Id, Converter={StaticResource NumericToBoolean}}"
								IsEnabled="{Binding Customer.IsUr, Converter={StaticResource BoolInverterConverter}}"
								EditValue="{Binding Customer.FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource FirstUpperConverter}}"
								GotFocus="Ru_GotFocus">
								<dxmvvm:Interaction.Behaviors>
									<asc:TabOnSpaceBehavior />
									<dxmvvm:EventToCommand
										EventTriggerBase_x0060_1.EventName="EditValueChanged"
										Command="{Binding SearchClientMatchCommand}" />
								</dxmvvm:Interaction.Behaviors>
							</dxe:TextEdit>
						</dxlc:LayoutItem>
						<dxlc:LayoutItem>
							<dxe:TextEdit
								NullText="{DynamicResource Patronymic}"
								IsReadOnly="{Binding Customer.Id, Converter={StaticResource NumericToBoolean}}"
								IsEnabled="{Binding Customer.IsUr, Converter={StaticResource BoolInverterConverter}}"
								EditValue="{Binding Customer.Patronymic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource FirstUpperConverter}}"
								GotFocus="Ru_GotFocus">
								<dxmvvm:Interaction.Behaviors>
									<asc:TabOnSpaceBehavior />
									<dxmvvm:EventToCommand
										EventTriggerBase_x0060_1.EventName="EditValueChanged"
										Command="{Binding SearchClientMatchCommand}" />
								</dxmvvm:Interaction.Behaviors>
							</dxe:TextEdit>
						</dxlc:LayoutItem>
						<dxlc:LayoutGroup
							ItemSpace="0"
							Padding="0"
							Orientation="Horizontal">
							<dxlc:LayoutItem
								ElementSpace="0"
								Padding="0">
								<dxe:TextEdit
									NullText="{DynamicResource Phone}"
									EditValue="{Binding Customer.Phone, Mode=TwoWay}">
									<dxmvvm:Interaction.Behaviors>
										<asc:TabOnSpaceBehavior />
									</dxmvvm:Interaction.Behaviors>
									<FrameworkElement.Style>
										<Style
											BasedOn="{StaticResource PhoneInput}"
											TargetType="{x:Type dxe:TextEdit}">
											<Setter
												Property="dxe:BaseEdit.IsReadOnly"
												Value="True" />
											<Setter
												Property="dxe:TextEdit.Mask"
												Value="{Binding SelectedItem.Mask, ElementName=Phone1Mask}" />
											<Style.Triggers>
												<DataTrigger
													Value="0"
													Binding="{Binding Customer.Id}">
													<Setter
														Property="dxe:BaseEdit.IsReadOnly"
														Value="False" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</FrameworkElement.Style>
								</dxe:TextEdit>
							</dxlc:LayoutItem>
							<dxlc:LayoutItem
								Margin="0"
								ElementSpace="0"
								Padding="0"
								Width="70">
								<dxe:ComboBoxEdit
									Name="Phone1Mask"
									ValueMember="Id"
									DisplayMember="Name"
									EditValue="{Binding Customer.PhoneMask, Mode=TwoWay}"
									ItemsSource="{Binding PhoneOptions}" />
							</dxlc:LayoutItem>
						</dxlc:LayoutGroup>
					</dxlc:LayoutGroup>
					<dxlc:LayoutGroup
						Orientation="Horizontal">
						<dxlc:LayoutItem>
							<dxe:ComboBoxEdit
								ShowError="False"
								NullText="{DynamicResource VisitSource}"
								DisplayMember="name"
								ValueMember="id"
								ItemsSource="{Binding VisitSources, Source={x:Static objects:OfflineData.Instance}}"
								EditValue="{Binding SelectedVisitSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
								<dxmvvm:Interaction.Behaviors>
									<dxmvvm:EventToCommand
										EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
										PassEventArgsToCommand="True"
										Command="{Binding ComboBoxClickCommand}" />
								</dxmvvm:Interaction.Behaviors>
							</dxe:ComboBoxEdit>
						</dxlc:LayoutItem>
						<dxlc:LayoutItem>
							<dxe:TextEdit
								NullText="{DynamicResource Address}"
								MaxLength="254"
								IsReadOnly="{Binding Customer.Id, Converter={StaticResource NumericToBoolean}}"
								EditValue="{Binding Customer.Address, Mode=TwoWay}"
								GotFocus="Ru_GotFocus" />
						</dxlc:LayoutItem>
						<dxlc:LayoutItem>
							<dxe:TextEdit
								MaskType="RegEx"
								Mask="(\w|[\.\-])+@(\w|[\-]+\.)*(\w|[\-]){2,63}\.[a-zA-Z]{2,4}"
								MaskUseAsDisplayFormat="True"
								ShowError="False"
								NullText="{DynamicResource Email}"
								MaxLength="254"
								IsReadOnly="{Binding Customer.Id, Converter={StaticResource NumericToBoolean}}"
								EditValue="{Binding Customer.Email, Mode=TwoWay}"
								GotFocus="En_GotFocus" />
						</dxlc:LayoutItem>
						<dxlc:LayoutGroup
							ItemSpace="0"
							Orientation="Horizontal">
							<dxlc:LayoutItem
								ElementSpace="0"
								Padding="0">
								<dxe:TextEdit
									NullText="{DynamicResource Phone2}"
									HorizontalAlignment="Stretch"
									EditValue="{Binding Customer.Phone2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
									<FrameworkElement.Style>
										<Style
											BasedOn="{StaticResource PhoneInput}"
											TargetType="{x:Type dxe:TextEdit}">
											<Setter
												Property="dxe:BaseEdit.IsReadOnly"
												Value="True" />
											<Setter
												Property="dxe:TextEdit.Mask"
												Value="{Binding SelectedItem.Mask, ElementName=Phone2Mask}" />
											<Style.Triggers>
												<DataTrigger
													Value="0"
													Binding="{Binding Customer.Id}">
													<Setter
														Property="dxe:BaseEdit.IsReadOnly"
														Value="False" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</FrameworkElement.Style>
								</dxe:TextEdit>
							</dxlc:LayoutItem>
							<dxlc:LayoutItem
								Margin="0"
								ElementSpace="0"
								Padding="0"
								Width="70">
								<dxe:ComboBoxEdit
									Name="Phone2Mask"
									ValueMember="Id"
									DisplayMember="Name"
									EditValue="{Binding Customer.Phone2Mask, Mode=TwoWay}"
									ItemsSource="{Binding PhoneOptions}" />
							</dxlc:LayoutItem>
						</dxlc:LayoutGroup>
					</dxlc:LayoutGroup>
				</dxlc:LayoutGroup>
				<dxlc:LayoutGroup
					Header="{DynamicResource Ur}"
					Orientation="Vertical"
					Visibility="{Binding Customer.IsUr, Converter={StaticResource BooleanToVisibilityConverter}}">
					<dxlc:LayoutGroup
						Orientation="Horizontal">
						<dxlc:LayoutItem
							Label="{DynamicResource Company}">
							<dxe:TextEdit
								NullText="{DynamicResource UrName}"
								MaxLength="254"
								EditValue="{Binding Customer.UrName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
								<dxmvvm:Interaction.Behaviors>
									<dxmvvm:EventToCommand
										EventTriggerBase_x0060_1.EventName="EditValueChanged"
										Command="{Binding SearchClientMatchCommand}" />
								</dxmvvm:Interaction.Behaviors>
							</dxe:TextEdit>
						</dxlc:LayoutItem>
						<dxlc:LayoutItem
							Label="{DynamicResource Address}">
							<dxe:TextEdit
								MaxLength="254"
								EditValue="{Binding Customer.Address, Mode=TwoWay}" />
						</dxlc:LayoutItem>
						<dxlc:LayoutItem
							Label="{DynamicResource Email}">
							<dxe:TextEdit
								MaxLength="254"
								EditValue="{Binding Customer.Email, Mode=TwoWay}" />
						</dxlc:LayoutItem>
						<dxlc:LayoutGroup
							ItemSpace="0"
							Padding="0"
							Orientation="Horizontal">
							<dxlc:LayoutItem
								ElementSpace="0"
								Padding="0">
								<dxe:TextEdit
									NullText="{DynamicResource Phone}"
									EditValue="{Binding Customer.Phone, Mode=TwoWay}">
									<dxmvvm:Interaction.Behaviors>
										<asc:TabOnSpaceBehavior />
									</dxmvvm:Interaction.Behaviors>
									<FrameworkElement.Style>
										<Style
											BasedOn="{StaticResource PhoneInput}"
											TargetType="{x:Type dxe:TextEdit}">
											<Setter
												Property="dxe:BaseEdit.IsReadOnly"
												Value="True" />
											<Setter
												Property="dxe:TextEdit.Mask"
												Value="{Binding SelectedItem.Mask, ElementName=PhoneUrMask}" />
											<Style.Triggers>
												<DataTrigger
													Value="0"
													Binding="{Binding Customer.Id}">
													<Setter
														Property="dxe:BaseEdit.IsReadOnly"
														Value="False" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</FrameworkElement.Style>
								</dxe:TextEdit>
							</dxlc:LayoutItem>
							<dxlc:LayoutItem
								Margin="0"
								ElementSpace="0"
								Padding="0"
								Width="70">
								<dxe:ComboBoxEdit
									Name="PhoneUrMask"
									ValueMember="Id"
									DisplayMember="Name"
									EditValue="{Binding Customer.PhoneMask, Mode=TwoWay}"
									ItemsSource="{Binding PhoneOptions}" />
							</dxlc:LayoutItem>
						</dxlc:LayoutGroup>
					</dxlc:LayoutGroup>
					<dxlc:LayoutItem>
						<dxe:ComboBoxEdit
							ShowError="False"
							NullText="{DynamicResource VisitSource}"
							DisplayMember="name"
							ValueMember="id"
							ItemsSource="{Binding VisitSources, Source={x:Static objects:OfflineData.Instance}}"
							EditValue="{Binding SelectedVisitSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
							<dxmvvm:Interaction.Behaviors>
								<dxmvvm:EventToCommand
									EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
									PassEventArgsToCommand="True"
									Command="{Binding ComboBoxClickCommand}" />
							</dxmvvm:Interaction.Behaviors>
						</dxe:ComboBoxEdit>
					</dxlc:LayoutItem>
				</dxlc:LayoutGroup>
			</dxlc:LayoutGroup>
			<dxlc:LayoutGroup
				IsCollapsible="True"
				Header="{DynamicResource CustomerMatch}"
				View="GroupBox"
				Visibility="{Binding IsMatchClientVisible, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
				<dxlc:LayoutItem
					MaxHeight="200">
					<Border
						BorderThickness="1"
						BorderBrush="#FFA9A9A9">
						<dxg:GridControl
							Height="190"
							Style="{StaticResource DeDefTable}"
							ItemsSource="{Binding ClientsMatch}"
							SelectedItem="{Binding SelectedMatch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
							<dxg:GridColumn
								FieldName="ID"
								HorizontalHeaderContentAlignment="Center"
								Width="100"
								VisibleIndex="0"
								Binding="{Binding ClientId}">
								<dxg:ColumnBase.EditSettings>
									<dxe:TextEditSettings
										HorizontalContentAlignment="Center"
										MaskType="Numeric"
										Mask="d6"
										MaskUseAsDisplayFormat="True" />
								</dxg:ColumnBase.EditSettings>
							</dxg:GridColumn>
							<dxg:GridColumn
								Width="20*"
								FieldName="{DynamicResource FullName++}"
								HorizontalHeaderContentAlignment="Center"
								Binding="{Binding FioOrUrName}" />
							<dxg:GridColumn
								AllowPrinting="False"
								Width="50"
								FieldName="{DynamicResource Type}"
								HorizontalHeaderContentAlignment="Center"
								Binding="{Binding ClientType, Converter={StaticResource ClientTypeToPictureConverter}}">
								<dxg:ColumnBase.EditSettings>
									<dxe:ImageEditSettings
										HorizontalContentAlignment="Center"
										MaxWidth="16"
										VerticalContentAlignment="Center"
										ShowMenu="False" />
								</dxg:ColumnBase.EditSettings>
							</dxg:GridColumn>
							<dxg:GridColumn
								AllowPrinting="False"
								Width="110"
								FieldName="{DynamicResource Label8}"
								HorizontalHeaderContentAlignment="Center"
								Binding="{Binding RepairsCount, Mode=OneWay}">
								<dxg:ColumnBase.EditSettings>
									<dxe:TextEditSettings
										HorizontalContentAlignment="Center" />
								</dxg:ColumnBase.EditSettings>
							</dxg:GridColumn>
							<dxg:GridColumn
								Width="5*"
								FieldName="{DynamicResource Phone}"
								HorizontalHeaderContentAlignment="Center"
								Binding="{Binding ClientPhone}">
								<dxg:ColumnBase.EditSettings>
									<dxe:TextEditSettings
										HorizontalContentAlignment="Center" />
								</dxg:ColumnBase.EditSettings>
							</dxg:GridColumn>
							<dxg:GridControl.View>
								<dxg:TableView
									IsSynchronizedWithCurrentItem="True"
									ShowTotalSummary="False"
									AllowScrollAnimation="True"
									NavigationStyle="Row"
									ColumnFilterPopupMode="Excel"
									AllowEditing="False"
									AllowGrouping="False"
									AllowColumnMoving="True"
									ShowGroupPanel="False"
									ShowColumnHeaders="True"
									AllowMoveColumnToDropArea="False"
									ShowSearchPanelMode="Never"
									ShowBandsPanel="True"
									ShowIndicator="False"
									AllowBestFit="True"
									AllowColumnFiltering="False"
									ShowSelectionRectangle="False"
									ShowFixedTotalSummary="False"
									SummariesIgnoreNullValues="True"
									RowMinHeight="{Binding Employee.UiSettings.RowHeight, Source={x:Static objects:OfflineData.Instance}}"
									FontSize="{Binding Employee.UiSettings.FontSize, Source={x:Static objects:OfflineData.Instance}}">
									<dxmvvm:Interaction.Behaviors>
										<dxmvvm:EventToCommand
											EventTriggerBase_x0060_1.EventName="RowDoubleClick"
											Command="{Binding ClientMatchClickCommand}" />
									</dxmvvm:Interaction.Behaviors>
								</dxg:TableView>
							</dxg:GridControl.View>
						</dxg:GridControl>
					</Border>
				</dxlc:LayoutItem>
			</dxlc:LayoutGroup>
			<dxlc:LayoutGroup
				View="GroupBox"
				Header="{DynamicResource NewCartridge}">
				<FrameworkElement.Resources>
					<ResourceDictionary>
						<Style
							TargetType="{x:Type dxlc:LayoutItem}"
							x:Key="{x:Type dxlc:LayoutItem}">
							<Setter
								Property="dxlc:LayoutItem.LabelPosition"
								Value="Top" />
						</Style>
					</ResourceDictionary>
				</FrameworkElement.Resources>
				<dxlc:LayoutItem
					Label="{DynamicResource Label1Copy}">
					<dxe:ComboBoxEdit
						ShowError="False"
						AutoComplete="True"
						DisplayMember="Name"
						ValueMember="Id"
						SelectedItem="{Binding SelectedMaker, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						ItemsSource="{Binding Makers}">
						<dxmvvm:Interaction.Behaviors>
							<dxmvvm:EventToCommand
								EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
								PassEventArgsToCommand="True"
								Command="{Binding ComboBoxClickCommand}" />
							<dxmvvm:EventToCommand
								EventTriggerBase_x0060_1.EventName="EditValueChanged"
								Command="{Binding NewMakerChangedCommand}" />
						</dxmvvm:Interaction.Behaviors>
					</dxe:ComboBoxEdit>
				</dxlc:LayoutItem>
				<dxlc:LayoutItem
					Label="{DynamicResource Label1Copy1}"
					IsEnabled="{Binding ModelEnable}">
					<dxe:ComboBoxEdit
						AutoComplete="True"
						IsCaseSensitiveFilter="False"
						FilterCondition="Contains"
						ImmediatePopup="True"
						IsCaseSensitiveSearch="False"
						ShowError="False"
						DisplayMember="Name"
						ValueMember="CardId"
						ItemsSource="{Binding CartridgeCards}"
						SelectedItem="{Binding NewCartridge, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
						<dxe:ButtonEdit.Buttons>
							<dxe:ButtonInfo
								GlyphKind="Plus"
								Command="{Binding CreateCartridgeCardCommand}" />
							<dxe:ButtonInfo
								GlyphKind="Edit"
								Visibility="{Binding Path=IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Self}}"
								Command="{Binding EditCartridgeCardCommand}" />
						</dxe:ButtonEdit.Buttons>
						<dxmvvm:Interaction.Behaviors>
							<dxmvvm:EventToCommand
								EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
								PassEventArgsToCommand="True"
								Command="{Binding ComboBoxClickCommand}" />
							<dxmvvm:EventToCommand
								EventTriggerBase_x0060_1.EventName="EditValueChanged"
								Command="{Binding CardIdChangedCommand}" />
						</dxmvvm:Interaction.Behaviors>
					</dxe:ComboBoxEdit>
				</dxlc:LayoutItem>
				<dxlc:LayoutItem
					Label="{DynamicResource Sn}"
					IsEnabled="{Binding SnInputEnable}">
					<dxe:TextEdit
						EditValue="{Binding NewSn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
						<dxmvvm:Interaction.Behaviors>
							<dxmvvm:EventToCommand
								EventTriggerBase_x0060_1.EventName="GotFocus"
								Command="{Binding SnGotFocusCommand}" />
							<dxmvvm:EventToCommand
								EventTriggerBase_x0060_1.EventName="LostFocus"
								Command="{Binding SnLostFocusCommand}" />
							<dxmvvm:EventToCommand
								EventTriggerBase_x0060_1.EventName="KeyUp"
								Command="{Binding SnKeyUpCommand}" />
						</dxmvvm:Interaction.Behaviors>
					</dxe:TextEdit>
				</dxlc:LayoutItem>
				<dxlc:LayoutItem
					Label="{DynamicResource Count}"
					HorizontalAlignment="Right">
					<dxe:SpinEdit
						IsFloatValue="False"
						MinValue="1"
						Width="80"
						EditValueType="{x:Type system:Int32}"
						EditValue="{Binding NewCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
				</dxlc:LayoutItem>
				<dxlc:LayoutItem
					HorizontalAlignment="Right"
					VerticalAlignment="Bottom">
					<dx:SimpleButton
						Content="{DynamicResource Add}"
						Command="{Binding AddCartridgeToListCommand}"
						Glyph="{DXImageGrayscale Image=Add_16x16.png}" />
				</dxlc:LayoutItem>
			</dxlc:LayoutGroup>
			<dxlc:LayoutGroup
				LayoutControl.AllowVerticalSizing="True"
				View="GroupBox"
				Header="{DynamicResource CartridgesList}">
				<dxg:GridControl
					MaxHeight="2300"
					MinHeight="100"
					AllowMRUFilterList="False"
					AllowColumnMRUFilterList="False"
					IsFilterEnabled="False"
					SelectedItem="{Binding SelectedCartridge, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					ItemsSource="{Binding Cartridges}">
					<dxg:GridControl.View>
						<dxg:CardView
							Name="view"
							ShowColumnHeaders="False"
							AllowColumnFiltering="False"
							ShowFilterPanelMode="Never"
							ShowCardExpandButton="False"
							AllowEditing="False"
							ShowGroupPanel="False"
							ShowGroupedColumns="False"
							PrintAutoCardWidth="False"
							AllowCardResizing="False"
							SeparatorThickness="0"
							MaxCardCountInRow="1"
							CardLayout="Rows"
							CardAlignment="Stretch"
							AllowGrouping="False"
							AutoScrollOnSorting="False"
							AllowSorting="False"
							AllowFilterEditor="False"
							SearchPanelAllowFilter="False"
							IsGroupPanelMenuEnabled="False">
							<dxg:CardView.CardHeaderTemplate>
								<DataTemplate>
									<StackPanel
										Orientation="Horizontal">
										<dx:SimpleButton
											ToolTip="{DynamicResource Delete}"
											Padding="0"
											Command="{Binding DataContext.RemoveCartridgeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
											Glyph="{DXImageGrayscale Image=Delete_16x16.png}" />
										<TextBlock
											Margin="10,0,0,0"
											FontWeight="Bold"
											VerticalAlignment="Center"
											Text="{Binding Data.MakerName}" />
										<TextBlock
											Margin="5,0,0,0"
											FontWeight="Bold"
											VerticalAlignment="Center"
											Text="{Binding Data.Name}" />
									</StackPanel>
								</DataTemplate>
							</dxg:CardView.CardHeaderTemplate>
							<dxg:CardView.CardTemplate>
								<DataTemplate>
									<dxlc:LayoutControl
										Padding="0"
										HorizontalAlignment="Stretch"
										Orientation="Horizontal">
										<FrameworkElement.Resources>
											<ResourceDictionary>
												<Style
													TargetType="{x:Type dxlc:LayoutItem}"
													x:Key="{x:Type dxlc:LayoutItem}">
													<Setter
														Property="dxlc:LayoutItem.LabelPosition"
														Value="Top" />
												</Style>
											</ResourceDictionary>
										</FrameworkElement.Resources>
										<dxlc:LayoutItem
											LabelPosition="Top"
											Label="{DynamicResource Sn}"
											HorizontalAlignment="Left">
											<dxe:ButtonEdit
												AllowDefaultButton="False"
												MinWidth="150"
												EditValue="{Binding Path=Row.SerialNumber, Mode=TwoWay}">
												<dxe:ButtonEdit.Buttons>
													<dxe:ButtonInfo
														GlyphKind="Cancel"
														Command="{Binding DataContext.SetEmptySnCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
												</dxe:ButtonEdit.Buttons>
											</dxe:ButtonEdit>
										</dxlc:LayoutItem>
										<dxlc:LayoutItem
											HorizontalContentAlignment="Center"
											Label="{DynamicResource Refill}"
											HorizontalAlignment="Left">
											<dxe:CheckEdit
												EditValue="{Binding Path=Row.Refill, Mode=TwoWay}" />
										</dxlc:LayoutItem>
										<dxlc:LayoutItem
											HorizontalContentAlignment="Center"
											Label="{DynamicResource OPCDrum}"
											HorizontalAlignment="Left">
											<dxe:CheckEdit
												EditValue="{Binding Path=Row.OPCDrum, Mode=TwoWay}" />
										</dxlc:LayoutItem>
										<dxlc:LayoutItem
											HorizontalContentAlignment="Center"
											Label="{DynamicResource Chip}"
											HorizontalAlignment="Left">
											<dxe:CheckEdit
												EditValue="{Binding Path=Row.Chip, Mode=TwoWay}" />
										</dxlc:LayoutItem>
										<dxlc:LayoutItem
											HorizontalContentAlignment="Center"
											Label="{DynamicResource CleaningBlade}"
											HorizontalAlignment="Left">
											<dxe:CheckEdit
												EditValue="{Binding Path=Row.CleaningBlade, Mode=TwoWay}" />
										</dxlc:LayoutItem>
										<dxlc:LayoutItem
											Label="{DynamicResource Notes}"
											HorizontalAlignment="Left">
											<dxe:TextEdit
												MaxLength="254"
												MinWidth="100"
												EditValue="{Binding Path=Row.CartridgeNotes, Mode=TwoWay}" />
										</dxlc:LayoutItem>
										<dxlc:LayoutItem
											Label="{DynamicResource History}"
											HorizontalAlignment="Left">
											<dxe:ComboBoxEdit
												DisplayMember="Value"
												ValueMember="Key"
												MinWidth="150"
												ItemsSource="{Binding DataContext.HistoryOptions, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
												EditValue="{Binding Path=Row.SelectedHistoryOption, Mode=TwoWay}">
												<dxmvvm:Interaction.Behaviors>
													<dxmvvm:EventToCommand
														EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
														PassEventArgsToCommand="True"
														Command="{Binding DataContext.ComboBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
												</dxmvvm:Interaction.Behaviors>
											</dxe:ComboBoxEdit>
										</dxlc:LayoutItem>
										<dxlc:LayoutItem
											Label="{DynamicResource Box}"
											HorizontalAlignment="Left">
											<dxe:ComboBoxEdit
												DisplayMember="name"
												ValueMember="id"
												MinWidth="150"
												ItemsSource="{Binding DataContext.Boxes, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
												EditValue="{Binding Path=Row.BoxId, Mode=TwoWay}">
												<dxmvvm:Interaction.Behaviors>
													<dxmvvm:EventToCommand
														EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
														PassEventArgsToCommand="True"
														Command="{Binding DataContext.ComboBoxClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
												</dxmvvm:Interaction.Behaviors>
											</dxe:ComboBoxEdit>
										</dxlc:LayoutItem>
										<dxlc:LayoutItem
											Label="{DynamicResource Price}"
											HorizontalAlignment="Left">
											<dxe:TextEdit
												MinWidth="80"
												IsReadOnly="True"
												EditValue="{Binding Path=Row.TotalCost, Mode=OneWay}" />
										</dxlc:LayoutItem>
									</dxlc:LayoutControl>
								</DataTemplate>
							</dxg:CardView.CardTemplate>
						</dxg:CardView>
					</dxg:GridControl.View>
				</dxg:GridControl>
			</dxlc:LayoutGroup>
		</dxlc:LayoutControl>
	</DockPanel>
</UserControl>
