<UserControl
	x:Class="ASC.NewRepairView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:ASC" xmlns:cnv="clr-namespace:ASC.Converters" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking" xmlns:view="clr-namespace:ASC.View" xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui" xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol" xmlns:worksAndParts="clr-namespace:ASC.RepairCard.WorksAndParts" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:themes="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:properties="clr-namespace:ASC.Properties" xmlns:objects="clr-namespace:ASC.Objects" xmlns:extensions="clr-namespace:ASC.Extensions" xmlns:controls="clr-namespace:ASC.View.Controls" xmlns:attributes="clr-namespace:ASC.ViewModels.Attributes"
	Name="repairWindow"
	Loaded="{DXEvent Loaded()}">
	<dxmvvm:Interaction.Behaviors>
		<dxmvvm:EventToCommand
			EventTriggerBase_x0060_1.EventName="Unloaded"
			Command="{Binding ClosingCommand}" />
	</dxmvvm:Interaction.Behaviors>
	<FrameworkElement.Resources>
		<ResourceDictionary>
			<dxmvvm:NumericToBooleanConverter
				x:Key="NumericToBoolean" />
			<cnv:FirstUpperConverter
				x:Key="FirstUpperConverter" />
			<cnv:BoolInverterConverter
				x:Key="BoolInverterConverter" />
			<DataTemplate
				DataType="{x:Type attributes:PanelViewModel}"
				x:Key="{DataTemplateKey {x:Type attributes:PanelViewModel}}">
				<view:PanelView />
			</DataTemplate>
			<DataTemplate
				DataType="{x:Type attributes:ComboBoxViewModel}"
				x:Key="{DataTemplateKey {x:Type attributes:ComboBoxViewModel}}">
				<view:ComboBoxView />
			</DataTemplate>
			<DataTemplate
				DataType="{x:Type attributes:DatePickerViewModel}"
				x:Key="{DataTemplateKey {x:Type attributes:DatePickerViewModel}}">
				<view:DatePickerView />
			</DataTemplate>
			<Style
				TargetType="{x:Type dxdo:LayoutPanel}"
				x:Key="{x:Type dxdo:LayoutPanel}">
				<Setter
					Property="dxdo:BaseLayoutItem.ShowCloseButton"
					Value="False" />
				<Setter
					Property="dxdo:LayoutPanel.ShowBorder"
					Value="False" />
				<Setter
					Property="dxdo:BaseLayoutItem.ShowCaption"
					Value="False" />
				<Setter
					Property="dxdo:BaseLayoutItem.AllowDrag"
					Value="False" />
				<Setter
					Property="dxdo:BaseLayoutItem.Margin"
					Value="0" />
				<Setter
					Property="dxdo:BaseLayoutItem.Padding"
					Value="0" />
			</Style>
			<ControlTemplate
				TargetType="{x:Type ContentControl}"
				x:Key="{themes:TokenEditorThemeKey ThemeKeyExtensionInternalBase_x0060_1.ResourceKey=EmptyTokenContainerTemplate, ThemeKeyExtensionBase_x0060_1.IsThemeIndependent=True}">
				<Grid>
					<TextBlock
						Name="text"
						VerticalAlignment="Center"
						Foreground="#BF7F7F7F"
						Margin="1"
						Text="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).NullText, RelativeSource={RelativeSource Self}}" />
					<TextBlock
						Name="nulltext"
						VerticalAlignment="Center"
						Margin="2,1"
						Opacity="0"
						Text="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).NullText, RelativeSource={RelativeSource Self}}"
						Foreground="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).NullTextForeground, RelativeSource={RelativeSource Self}}" />
					<ContentPresenter />
				</Grid>
				<ControlTemplate.Triggers>
					<DataTrigger
						Value="True"
						Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsEditorActivated, RelativeSource={RelativeSource Self}}">
						<Setter
							TargetName="text"
							Property="UIElement.Opacity"
							Value="0" />
					</DataTrigger>
					<DataTrigger
						Value="True"
						Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).HasNullText, RelativeSource={RelativeSource Self}}">
						<Setter
							TargetName="text"
							Property="UIElement.Opacity"
							Value="0" />
						<Setter
							TargetName="nulltext"
							Property="UIElement.Opacity"
							Value="1" />
					</DataTrigger>
					<DataTrigger
						Value="True"
						Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsTokenEditorReadOnly, RelativeSource={RelativeSource Self}}">
						<Setter
							TargetName="text"
							Property="UIElement.Opacity"
							Value="0" />
					</DataTrigger>
					<DataTrigger
						Value="False"
						Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsTextEditable, RelativeSource={RelativeSource Self}}">
						<Setter
							TargetName="text"
							Property="UIElement.Opacity"
							Value="0" />
					</DataTrigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
		</ResourceDictionary>
	</FrameworkElement.Resources>
	<DockPanel>
		<dxwui:AppBar
			Background="#3f3f3f"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			ItemSpacing="5"
			HideMode="AlwaysVisible"
			DockPanel.Dock="Bottom">
			<dxwui:AppBarButton
				Label="{DynamicResource Photos}"
				AllowGlyphTheming="True"
				HorizontalAlignment="Center"
				IsEllipseEnabled="False"
				Command="{Binding MakeOrderPhotoCommand}"
				Glyph="{dx:DXImageGrayscale Image=AttachmentObject_32x32.png}" />
			<dxwui:AppBarButton
				Label="{DynamicResource MultipleAccept}"
				AllowGlyphTheming="True"
				HorizontalAlignment="Center"
				IsEllipseEnabled="False"
				Visibility="{Binding Repair.quick_repair, Converter={dx:BooleanToVisibilityConverter Invert=True}}"
				Command="{Binding MakeManyOrdersCommand}"
				Glyph="{dx:DXImageGrayscale Image=SaveAll_32x32.png}" />
			<dxwui:AppBarButton
				Label="{DynamicResource Accept}"
				AllowGlyphTheming="True"
				HorizontalAlignment="Center"
				IsEllipseEnabled="False"
				Visibility="{Binding Repair.quick_repair, Converter={dx:BooleanToVisibilityConverter Invert=True}}"
				Command="{Binding MakeOrderCommand}"
				Glyph="{dx:DXImageGrayscale Image=Save_32x32.png}" />
			<dxwui:AppBarButton
				Label="{DynamicResource Issue}"
				AllowGlyphTheming="True"
				HorizontalAlignment="Center"
				IsEllipseEnabled="False"
				Visibility="{Binding Repair.quick_repair, Converter={StaticResource BooleanToVisibilityConverter}}"
				Command="{Binding MakeQuickOrderCommand}"
				Glyph="{dx:DXImageGrayscale Image=Save_32x32.png}" />
		</dxwui:AppBar>
		<DockPanel
			Dock="Left">
			<DockPanel
				MaxWidth="{StaticResource LeftSidebarMaxWidth}"
				Visibility="{Binding ElementName=ExpandButton, Path=IsChecked, Converter={dxmvvm:BooleanToVisibilityConverter}}">
				<dx:SimpleButton
					Name="LeftMenuLayoutModeSwitch"
					Background="#00FFFFFF"
					Padding="0"
					Margin="10"
					DockPanel.Dock="Bottom"
					HorizontalAlignment="Left"
					ButtonKind="Toggle"
					Command="{Binding LayoutControlCustomizationCommand}"
					CommandParameter="{Binding ElementName=NewOrderLeftMenuLayout}"
					Glyph="{DXImageGrayscale Image=Edit_16x16.png}" />
				<dxlc:LayoutControl
					Name="NewOrderLeftMenuLayout"
					ItemStyle="{StaticResource LeftMenuLayout}"
					Padding="10, 5, 0, 10"
					Orientation="Vertical"
					IsCustomization="{Binding ElementName=LeftMenuLayoutModeSwitch, Path=IsChecked}">
					<dxmvvm:Interaction.Behaviors>
						<dxmvvm:EventToCommand
							EventTriggerBase_x0060_1.EventName="Loaded"
							Command="{Binding LayoutControlLoadedCommand}"
							CommandParameter="{Binding ElementName=NewOrderLeftMenuLayout}" />
					</dxmvvm:Interaction.Behaviors>
					<dxlc:LayoutGroup>
						<dxlc:DataLayoutItem
							Visibility="{Binding CustomerInfoVisibility, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
							<dxe:ListBoxEdit
								Focusable="False"
								IsReadOnly="True"
								ItemsSource="{Binding CustomerInfo}">
								<dxe:ListBoxEdit.ItemTemplate>
									<DataTemplate>
										<Border
											Background="#00FFFFFF">
											<StackPanel
												Orientation="Horizontal">
												<TextBlock
													Text="{Binding Name}"
													Foreground="{Binding Color}" />
											</StackPanel>
										</Border>
									</DataTemplate>
								</dxe:ListBoxEdit.ItemTemplate>
							</dxe:ListBoxEdit>
						</dxlc:DataLayoutItem>
					</dxlc:LayoutGroup>
					<dxlc:LayoutGroup
						Orientation="Vertical">
						<dxlc:LayoutItem
							HorizontalContentAlignment="Right"
							Label="{DynamicResource QuickRepair}">
							<dxe:CheckEdit
								Name="CheckBoxQuickRepair"
								IsEnabled="{Binding AllowQuickRepair}"
								EditValue="{Binding Repair.quick_repair, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						</dxlc:LayoutItem>
						<dxlc:LayoutItem
							HorizontalContentAlignment="Right"
							Label="{DynamicResource CheckBoxThirdPartySc}">
							<dxe:CheckEdit
								EditValue="{Binding Repair.thirs_party_sc, Mode=TwoWay}" />
						</dxlc:LayoutItem>
						<dxlc:LayoutItem
							HorizontalContentAlignment="Right"
							Label="{DynamicResource CheckBoxExpressRepair}">
							<dxe:CheckEdit
								EditValue="{Binding Repair.express_repair, Mode=TwoWay}" />
						</dxlc:LayoutItem>
						<dxlc:LayoutItem
							HorizontalContentAlignment="Right"
							Label="{DynamicResource CheckBoxCanFormat}">
							<dxe:CheckEdit
								EditValue="{Binding Repair.can_format, Mode=TwoWay}" />
						</dxlc:LayoutItem>
						<dxlc:LayoutItem
							HorizontalContentAlignment="Right"
							Label="{DynamicResource WasInService}">
							<dxe:CheckEdit
								Name="wasInService"
								EditValue="{Binding Repair.is_repeat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						</dxlc:LayoutItem>
						<dxlc:LayoutItem
							HorizontalContentAlignment="Right"
							Label="{DynamicResource WarrantyRepair}">
							<dxe:CheckEdit
								Name="warrantyRepair"
								EditValue="{Binding Repair.is_warranty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						</dxlc:LayoutItem>
						<dxlc:LayoutItem>
							<FrameworkElement.Style>
								<Style
									TargetType="{x:Type dxlc:LayoutItem}">
									<Setter
										Property="Visibility"
										Value="Collapsed" />
									<Style.Triggers>
										<DataTrigger
											Value="True"
											Binding="{Binding IsChecked, ElementName=wasInService}">
											<Setter
												Property="Visibility"
												Value="Visible" />
										</DataTrigger>
										<DataTrigger
											Value="True"
											Binding="{Binding IsChecked, ElementName=warrantyRepair}">
											<Setter
												Property="Visibility"
												Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</FrameworkElement.Style>
							<dxe:ButtonEdit
								AllowDefaultButton="False"
								NullText="{DynamicResource WasInServiceBtn}"
								IsReadOnly="True"
								HorizontalContentAlignment="Left"
								MaskType="Numeric"
								Mask="d6"
								MaskUseAsDisplayFormat="True"
								EditValue="{Binding Repair.early, Mode=OneWay}">
								<dxe:ButtonEdit.Buttons>
									<dxe:ButtonInfo
										GlyphKind="Search"
										Command="{Binding SelectEarlyRepairCommand}" />
									<dxe:ButtonInfo
										GlyphKind="Down"
										Command="{Binding ToggleExtEarlyVisCommand}" />
								</dxe:ButtonEdit.Buttons>
							</dxe:ButtonEdit>
						</dxlc:LayoutItem>
						<dxlc:LayoutItem
							Visibility="{Binding vw_enable, Source={x:Static local:Auth.Config}, Converter={StaticResource BooleanToVisibilityConverter}}">
							<controls:VendorSelectView
								dxmvvm:ViewModelExtensions.ParentViewModel="{Binding DataContext, ElementName=repairWindow}" />
						</dxlc:LayoutItem>
						<dxlc:LayoutItem
							Label="{DynamicResource FromExtDb}"
							Visibility="{Binding ExtEarlyVis, Converter={StaticResource BooleanToVisibilityConverter}}">
							<dxe:TextEdit
								EditValue="{Binding Repair.ext_early, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						</dxlc:LayoutItem>
						<dxlc:LayoutGroup
							Orientation="Vertical"
							Visibility="{Binding Repair.quick_repair, Converter={dx:BooleanToVisibilityConverter Invert=True}}">
							<dxlc:LayoutItem>
								<dxe:ComboBoxEdit
									NullText="{DynamicResource SetMaster}"
									ValueMember="Uid"
									DisplayMember="FioShort"
									VerticalAlignment="Center"
									ItemsSource="{Binding Masters}"
									EditValue="{Binding Repair.master, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
									<dxe:ButtonEdit.Buttons>
										<dxe:ButtonInfo
											GlyphKind="Cancel"
											Command="{Binding UnsetMasterCommand}" />
									</dxe:ButtonEdit.Buttons>
									<dxmvvm:Interaction.Behaviors>
										<dxmvvm:EventToCommand
											EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
											PassEventArgsToCommand="True"
											Command="{Binding ComboBoxClickCommand}" />
									</dxmvvm:Interaction.Behaviors>
								</dxe:ComboBoxEdit>
							</dxlc:LayoutItem>
							<dxlc:LayoutItem
								Visibility="{Binding ShowBoxes, Converter={StaticResource BooleanToVisibilityConverter}}">
								<dxe:ComboBoxEdit
									AutoComplete="True"
									IsCaseSensitiveSearch="False"
									NullText="{DynamicResource Box}"
									ValueMember="id"
									DisplayMember="name"
									EditValue="{Binding Repair.box, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									ItemsSource="{Binding Boxes}">
									<dxe:ButtonEdit.Buttons>
										<dxe:ButtonInfo
											GlyphKind="Cancel"
											Command="{Binding UnsetBoxCommand}" />
									</dxe:ButtonEdit.Buttons>
									<dxmvvm:Interaction.Behaviors>
										<dxmvvm:EventToCommand
											EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
											PassEventArgsToCommand="True"
											Command="{Binding ComboBoxClickCommand}" />
									</dxmvvm:Interaction.Behaviors>
								</dxe:ComboBoxEdit>
							</dxlc:LayoutItem>
						</dxlc:LayoutGroup>
						<dxlc:LayoutItem
							ToolTip="{DynamicResource Office}"
							Visibility="{Binding OfficesVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
							<dxe:ComboBoxEdit
								ShowError="False"
								ValueMember="id"
								DisplayMember="name"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Top"
								IsReadOnly="{Binding OfficeReadOnly}"
								EditValue="{Binding Repair.office, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								ItemsSource="{Binding Offices, Source={x:Static objects:OfflineData.Instance}}">
								<dxmvvm:Interaction.Behaviors>
									<dxmvvm:EventToCommand
										EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
										PassEventArgsToCommand="True"
										Command="{Binding ComboBoxClickCommand}" />
								</dxmvvm:Interaction.Behaviors>
							</dxe:ComboBoxEdit>
						</dxlc:LayoutItem>
						<dxlc:LayoutGroup
							Header="{DynamicResource Company}"
							Orientation="Vertical"
							Visibility="{Binding CompaniesVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
							<dxlc:LayoutItem
								ToolTip="{DynamicResource Company}">
								<dxe:ComboBoxEdit
									Name="ComboBoxCompany"
									ShowError="False"
									ValueMember="Id"
									DisplayMember="Name"
									EditValue="{Binding Repair.company, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									ItemsSource="{Binding Companies, Source={x:Static objects:OfflineData.Instance}}">
									<dxmvvm:Interaction.Behaviors>
										<dxmvvm:EventToCommand
											EventTriggerBase_x0060_1.EventName="EditValueChanged"
											Command="{Binding CompanySelectionChangedCommand}" />
										<dxmvvm:EventToCommand
											EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
											PassEventArgsToCommand="True"
											Command="{Binding ComboBoxClickCommand}" />
									</dxmvvm:Interaction.Behaviors>
								</dxe:ComboBoxEdit>
							</dxlc:LayoutItem>
							<dxlc:LayoutItem>
								<TextBlock
									VerticalAlignment="Top"
									TextWrapping="Wrap"
									Text="{Binding SelectedItem.Description, ElementName=ComboBoxCompany}" />
							</dxlc:LayoutItem>
						</dxlc:LayoutGroup>
						<controls:ReportTemplateSelectorView
							DataContext="{Binding ReportTemplateSelector}" />
						<dxlc:LayoutItem
							ToolTip="{DynamicResource PrintCheck2}"
							HorizontalContentAlignment="Right"
							Label="{DynamicResource PrintCheck}"
							Visibility="{Binding Repair.quick_repair, Converter={dx:BooleanToVisibilityConverter Invert=True}}">
							<CheckBox
								Style="{StaticResource DefCheckBox}"
								IsChecked="{Binding Repair.print_check, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						</dxlc:LayoutItem>
						<dxlc:LayoutItem
							HorizontalContentAlignment="Right"
							Label="{DynamicResource PrintCheck2}"
							Visibility="{Binding Repair.quick_repair, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
							<CheckBox
								Style="{StaticResource DefCheckBox}"
								IsChecked="{Binding PrintCheque, Mode=TwoWay}" />
						</dxlc:LayoutItem>
						<dxlc:LayoutItem
							HorizontalContentAlignment="Right"
							Label="{DynamicResource PrintPko}">
							<CheckBox
								Style="{StaticResource DefCheckBox}"
								IsChecked="{Binding PrintPko, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						</dxlc:LayoutItem>
						<dxlc:LayoutItem
							Label="{DynamicResource Stickers}"
							Visibility="{Binding Settings.PrintRepStickers, Source={x:Static objects:OfflineData.Instance}, Converter={StaticResource BooleanToVisibilityConverter}}">
							<dxe:SpinEdit
								Width="50"
								HorizontalAlignment="Right"
								ShowError="False"
								IsFloatValue="False"
								MinValue="1"
								MaxValue="9"
								EditValueType="{x:Type system:Int32}"
								EditValue="{Binding StickerCount, Mode=TwoWay}" />
						</dxlc:LayoutItem>
						<dxlc:LayoutItem
							ToolTip="{DynamicResource PrintParts}"
							HorizontalContentAlignment="Right"
							Label="{DynamicResource PrintPartsShort}"
							Visibility="{Binding Repair.quick_repair, Converter={StaticResource BooleanToVisibilityConverter}}">
							<CheckBox
								IsChecked="{Binding PrintParts, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						</dxlc:LayoutItem>
						<dxlc:LayoutItem
							Label="{DynamicResource Payment}">
							<ComboBox
								DisplayMemberPath="Name"
								SelectedValuePath="Id"
								ItemsSource="{Binding PaymentOptionses, Source={x:Static objects:OfflineData.Instance}}"
								SelectedValue="{Binding Repair.payment_system, Mode=TwoWay}" />
						</dxlc:LayoutItem>
					</dxlc:LayoutGroup>
				</dxlc:LayoutControl>
			</DockPanel>
			<Grid
				DockPanel.Dock="Left">
				<ToggleButton
					Name="ExpandButton"
					Style="{StaticResource HideButtonStyleLeft}"
					VerticalAlignment="Center"
					IsChecked="{Binding Path=NewRepLeftPanel, Source={x:Static properties:Settings.Default}}" />
			</Grid>
		</DockPanel>
		<dx:BackgroundPanel>
			<Grid
				OpacityMask="#FF000000">
				<dxlc:LayoutControl
					Margin="0,5"
					Padding="5,0"
					Orientation="Vertical">
					<dxlc:LayoutGroup
						View="GroupBox"
						Orientation="Vertical"
						IsCollapsible="True"
						IsCollapsed="{Binding IsChecked, Mode=OneWay, ElementName=CheckBoxQuickRepair}">
						<dxlc:LayoutGroup.HeaderTemplate>
							<DataTemplate>
								<StackPanel
									Orientation="Horizontal">
									<TextBlock
										Text="{DynamicResource Device}" />
									<Image
										ToolTip="{DynamicResource DeviceMatch}"
										Cursor="Hand"
										Margin="5,0,0,0"
										Source="{dx:DXImageGrayscale Image=Find_16x16.png}"
										Visibility="{Binding DataContext.DeviceMatchFound, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=repairWindow}">
										<dxmvvm:Interaction.Behaviors>
											<dxmvvm:EventToCommand
												EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonUp"
												Command="{Binding DataContext.ShowDeviceMatchesCommand, ElementName=repairWindow}" />
										</dxmvvm:Interaction.Behaviors>
									</Image>
								</StackPanel>
							</DataTemplate>
						</dxlc:LayoutGroup.HeaderTemplate>
						<dxlc:LayoutGroup
							Orientation="Horizontal">
							<dxlc:LayoutItem>
								<dxe:ComboBoxEdit
									AutoComplete="True"
									ShowError="False"
									NullText="{DynamicResource LabelDeviceType}"
									HorizontalAlignment="Stretch"
									DisplayMember="Name"
									ValueMember="Id"
									VerticalAlignment="Top"
									ToolTip="Тип устройства"
									ItemsSource="{Binding Devices}"
									EditValue="{Binding Repair.type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
									<dxmvvm:Interaction.Behaviors>
										<dxmvvm:EventToCommand
											EventTriggerBase_x0060_1.EventName="EditValueChanged"
											Command="{Binding RepairTypeChangedCommand}" />
										<dxmvvm:EventToCommand
											EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
											PassEventArgsToCommand="True"
											Command="{Binding ComboBoxClickCommand}" />
									</dxmvvm:Interaction.Behaviors>
								</dxe:ComboBoxEdit>
							</dxlc:LayoutItem>
							<dxlc:LayoutItem>
								<dxe:ComboBoxEdit
									AutoComplete="True"
									ShowError="False"
									NullText="{DynamicResource Label1Copy}"
									DisplayMember="Name"
									ValueMember="Id"
									ToolTip="{DynamicResource Label1Copy}"
									ValidateOnTextInput="{Binding ValidateMaker}"
									ItemsSource="{Binding Makers}"
									EditValue="{Binding Repair.maker, Mode=TwoWay, NotifyOnSourceUpdated=True}"
									GotFocus="En_GotFocus">
									<dxmvvm:Interaction.Behaviors>
										<dxmvvm:EventToCommand
											EventTriggerBase_x0060_1.EventName="ProcessNewValue"
											PassEventArgsToCommand="True"
											Command="{Binding NewMakerInputCommand}" />
										<dxmvvm:EventToCommand
											EventTriggerBase_x0060_1.EventName="SourceUpdated"
											Command="{Binding MakersChangedCommand}" />
										<dxmvvm:EventToCommand
											EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
											PassEventArgsToCommand="True"
											Command="{Binding ComboBoxClickCommand}" />
									</dxmvvm:Interaction.Behaviors>
								</dxe:ComboBoxEdit>
							</dxlc:LayoutItem>
							<dxlc:LayoutItem>
								<dxe:ComboBoxEdit
									ImmediatePopup="True"
									FilterCondition="Contains"
									IncrementalFiltering="True"
									NullText="{DynamicResource Label1Copy1}"
									ShowError="False"
									DisplayMember="name"
									ValueMember="name"
									ValidateOnTextInput="False"
									AutoComplete="False"
									ItemsSource="{Binding MakerModels}"
									Text="{Binding Repair.ModelName, Mode=TwoWay}"
									GotFocus="En_GotFocus">
									<dxmvvm:Interaction.Behaviors>
										<dxmvvm:EventToCommand
											EventTriggerBase_x0060_1.EventName="ProcessNewValue"
											PassEventArgsToCommand="True"
											Command="{Binding NewModelInputCommand}" />
										<dxmvvm:EventToCommand
											EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
											PassEventArgsToCommand="True"
											Command="{Binding ComboBoxClickCommand}" />
									</dxmvvm:Interaction.Behaviors>
								</dxe:ComboBoxEdit>
							</dxlc:LayoutItem>
							<dxlc:LayoutItem>
								<dxe:ButtonEdit
									AllowDefaultButton="False"
									ShowError="False"
									NullText="{DynamicResource SerialNumber}"
									HorizontalAlignment="Stretch"
									TextWrapping="Wrap"
									EditValue="{Binding Repair.serial_number, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									GotFocus="En_GotFocus">
									<dxe:ButtonInfo
										ButtonKind="Simple"
										GlyphKind="Cancel"
										Command="{Binding SetNoSnCommand}" />
									<dxmvvm:Interaction.Behaviors>
										<dxmvvm:EventToCommand
											EventTriggerBase_x0060_1.EventName="EditValueChanged"
											Command="{Binding SerialNumberChangedCommand}" />
									</dxmvvm:Interaction.Behaviors>
								</dxe:ButtonEdit>
							</dxlc:LayoutItem>
						</dxlc:LayoutGroup>
						<dxlc:LayoutItem>
							<dxlc:FlowLayoutControl
								Orientation="Horizontal"
								Padding="0, 5"
								AllowLayerSizing="True"
								AllowItemMoving="True"
								ItemsSource="{Binding Repair.AdditionalFields}" />
						</dxlc:LayoutItem>
					</dxlc:LayoutGroup>
					<dxlc:LayoutGroup
						View="GroupBox"
						Visibility="{Binding DeviceMatchVisible, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
						<dxlc:LayoutGroup.HeaderTemplate>
							<DataTemplate>
								<StackPanel
									Orientation="Horizontal">
									<TextBlock
										Text="{DynamicResource DeviceMatch}" />
									<Image
										ToolTip="{DynamicResource DeviceMatch}"
										Cursor="Hand"
										Margin="5,0,0,0"
										Source="{dx:DXImageGrayscale Image=Close_16x16.png}">
										<dxmvvm:Interaction.Behaviors>
											<dxmvvm:EventToCommand
												EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
												Command="{Binding DataContext.HideDeviceMatchCommand, ElementName=repairWindow}" />
										</dxmvvm:Interaction.Behaviors>
									</Image>
								</StackPanel>
							</DataTemplate>
						</dxlc:LayoutGroup.HeaderTemplate>
						<dxlc:LayoutItem
							MaxHeight="200">
							<Grid>
								<Border
									BorderThickness="1"
									BorderBrush="#FFA9A9A9">
									<dxg:GridControl
										Height="190"
										Style="{StaticResource DeDefTable}"
										ItemsSource="{Binding DevicesMatch}"
										SelectedItem="{Binding SelectedMatch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
										<dxg:GridColumn
											FieldName="ID"
											HorizontalHeaderContentAlignment="Center"
											Width="100"
											VisibleIndex="0"
											Binding="{Binding Id}">
											<dxg:ColumnBase.EditSettings>
												<dxe:TextEditSettings
													HorizontalContentAlignment="Center"
													MaskType="Numeric"
													Mask="d6"
													MaskUseAsDisplayFormat="True" />
											</dxg:ColumnBase.EditSettings>
										</dxg:GridColumn>
										<dxg:GridColumn
											Width="10*"
											FieldName="{DynamicResource Hardware}"
											HorizontalHeaderContentAlignment="Center"
											Binding="{Binding Device, Mode=OneWay}" />
										<dxg:GridColumn
											Width="5*"
											AllowPrinting="False"
											FieldName="{DynamicResource Fault}"
											HorizontalHeaderContentAlignment="Center"
											Binding="{Binding Fault, Mode=OneWay}" />
										<dxg:GridColumn
											AllowPrinting="False"
											FieldName="{DynamicResource SerialNumber}"
											HorizontalHeaderContentAlignment="Center"
											Binding="{Binding SerialNumber}" />
										<dxg:GridColumn
											Width="5*"
											FieldName="{DynamicResource FullName}"
											HorizontalHeaderContentAlignment="Center"
											Binding="{Binding FioOrUrName}" />
										<dxg:GridControl.View>
											<dxg:TableView
												IsSynchronizedWithCurrentItem="True"
												ShowTotalSummary="False"
												AllowScrollAnimation="True"
												NavigationStyle="Row"
												ColumnFilterPopupMode="Excel"
												AllowEditing="False"
												AllowGrouping="False"
												AllowColumnMoving="True"
												ShowGroupPanel="False"
												ShowColumnHeaders="True"
												AllowMoveColumnToDropArea="False"
												ShowSearchPanelMode="Never"
												ShowBandsPanel="True"
												ShowIndicator="False"
												AllowBestFit="True"
												AllowColumnFiltering="False"
												ShowSelectionRectangle="False"
												ShowFixedTotalSummary="False"
												SummariesIgnoreNullValues="True"
												RowMinHeight="{Binding Employee.UiSettings.RowHeight, Source={x:Static objects:OfflineData.Instance}}"
												FontSize="{Binding Employee.UiSettings.FontSize, Source={x:Static objects:OfflineData.Instance}}">
												<dxmvvm:Interaction.Behaviors>
													<dxmvvm:EventToCommand
														EventTriggerBase_x0060_1.EventName="RowDoubleClick"
														CommandParameter="True"
														Command="{Binding MatchClickCommand}" />
												</dxmvvm:Interaction.Behaviors>
											</dxg:TableView>
										</dxg:GridControl.View>
									</dxg:GridControl>
								</Border>
							</Grid>
						</dxlc:LayoutItem>
					</dxlc:LayoutGroup>
					<dxlc:LayoutGroup
						View="Tabs">
						<dxlc:LayoutGroup.TabsStyle>
							<Style
								TargetType="{x:Type dx:DXTabControl}">
								<Setter
									Property="dx:DXTabControl.ControlBoxLeftTemplate">
									<Setter.Value>
										<DataTemplate>
											<CheckBox
												VerticalAlignment="Center"
												Margin="0,0,5,0"
												Content="{DynamicResource Company}"
												IsChecked="{Binding Customer.IsUr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
										</DataTemplate>
									</Setter.Value>
								</Setter>
								<Setter
									Property="dx:DXTabControl.ContentFooterTemplate">
									<Setter.Value>
										<DataTemplate>
											<StackPanel
												Margin="0,5, 0 ,0"
												Orientation="Horizontal">
												<dx:SimpleButton
													Content="{DynamicResource SelectClient}"
													HorizontalAlignment="Left"
													VerticalAlignment="Bottom"
													Height="25"
													Command="{Binding SelectCustomerCommand}"
													Glyph="{DXImageGrayscale Image=Find_16x16.png}" />
												<dx:SimpleButton
													Padding="2,0"
													Command="{Binding UnsetClientCommand}"
													Glyph="{DXImageGrayscale Image=Close_16x16.png}" />
												<Button
													ToolTip="{DynamicResource OpenClientCard}"
													Padding="0"
													HorizontalAlignment="Left"
													VerticalAlignment="Bottom"
													Width="25"
													Height="25"
													Visibility="{Binding OpenClietcCardBtnVis, Converter={StaticResource BooleanToVisibilityConverter}}"
													Command="{Binding OpenClientCardCommand}"
													CommandParameter="{Binding Customer.Id}">
													<Image
														Source="../Resources/user.png"
														Style="{StaticResource 16X16Image}"
														Height="22" />
												</Button>
											</StackPanel>
										</DataTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</dxlc:LayoutGroup.TabsStyle>
						<dxlc:LayoutGroup
							Header="{DynamicResource Client}"
							Orientation="Vertical"
							Visibility="{Binding Customer.IsUr, Converter={dx:BooleanToVisibilityConverter Invert=True}}">
							<dxlc:LayoutGroup
								Orientation="Horizontal">
								<dxlc:LayoutItem>
									<dxe:TextEdit
										NullText="{DynamicResource Surname}"
										IsReadOnly="{Binding Customer.Id, Converter={StaticResource NumericToBoolean}}"
										IsEnabled="{Binding Customer.IsUr, Converter={StaticResource BoolInverterConverter}}"
										EditValue="{Binding Customer.LastName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource FirstUpperConverter}}"
										GotFocus="Ru_GotFocus">
										<dxmvvm:Interaction.Behaviors>
											<local:TabOnSpaceBehavior />
											<dxmvvm:EventToCommand
												EventTriggerBase_x0060_1.EventName="EditValueChanged"
												Command="{Binding SearchClientMatchCommand}" />
										</dxmvvm:Interaction.Behaviors>
									</dxe:TextEdit>
								</dxlc:LayoutItem>
								<dxlc:LayoutItem>
									<dxe:TextEdit
										NullText="{DynamicResource Name}"
										IsReadOnly="{Binding Customer.Id, Converter={StaticResource NumericToBoolean}}"
										IsEnabled="{Binding Customer.IsUr, Converter={StaticResource BoolInverterConverter}}"
										EditValue="{Binding Customer.FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource FirstUpperConverter}}"
										GotFocus="Ru_GotFocus">
										<dxmvvm:Interaction.Behaviors>
											<local:TabOnSpaceBehavior />
											<dxmvvm:EventToCommand
												EventTriggerBase_x0060_1.EventName="EditValueChanged"
												Command="{Binding SearchClientMatchCommand}" />
										</dxmvvm:Interaction.Behaviors>
									</dxe:TextEdit>
								</dxlc:LayoutItem>
								<dxlc:LayoutItem>
									<dxe:TextEdit
										NullText="{DynamicResource Patronymic}"
										IsReadOnly="{Binding Customer.Id, Converter={StaticResource NumericToBoolean}}"
										IsEnabled="{Binding Customer.IsUr, Converter={StaticResource BoolInverterConverter}}"
										EditValue="{Binding Customer.Patronymic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource FirstUpperConverter}}"
										GotFocus="Ru_GotFocus">
										<dxmvvm:Interaction.Behaviors>
											<local:TabOnSpaceBehavior />
											<dxmvvm:EventToCommand
												EventTriggerBase_x0060_1.EventName="EditValueChanged"
												Command="{Binding SearchClientMatchCommand}" />
										</dxmvvm:Interaction.Behaviors>
									</dxe:TextEdit>
								</dxlc:LayoutItem>
								<dxlc:LayoutGroup
									ItemSpace="0"
									Padding="0"
									Orientation="Horizontal">
									<dxlc:LayoutItem
										ElementSpace="0"
										Padding="0">
										<dxe:TextEdit
											ShowError="False"
											MaskIgnoreBlank="True"
											NullText="{DynamicResource Phone}"
											Style="{StaticResource PhoneInput}"
											Mask="{Binding SelectedItem.Mask, ElementName=Phone1Mask}"
											EditValue="{Binding Customer.Phone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
											<dxmvvm:Interaction.Behaviors>
												<local:TabOnSpaceBehavior />
												<extensions:SelectAllOnMouseUpBehavior />
												<dxmvvm:EventToCommand
													EventTriggerBase_x0060_1.EventName="EditValueChanged"
													Command="{Binding SearchClientMatchCommand}" />
											</dxmvvm:Interaction.Behaviors>
										</dxe:TextEdit>
									</dxlc:LayoutItem>
									<dxlc:LayoutItem
										Margin="0"
										ElementSpace="0"
										Padding="0"
										Width="70">
										<dxe:ComboBoxEdit
											Name="Phone1Mask"
											ValueMember="Id"
											DisplayMember="Name"
											EditValue="{Binding Customer.PhoneMask, Mode=TwoWay}"
											ItemsSource="{Binding PhoneOptions}" />
									</dxlc:LayoutItem>
								</dxlc:LayoutGroup>
							</dxlc:LayoutGroup>
							<dxlc:LayoutGroup
								Orientation="Horizontal">
								<dxlc:LayoutItem>
									<dxe:ComboBoxEdit
										NullText="{DynamicResource VisitSource}"
										DisplayMember="name"
										ValueMember="id"
										IsReadOnly="{Binding Customer.Id, Converter={StaticResource NumericToBoolean}}"
										ItemsSource="{Binding VisitSources, Source={x:Static objects:OfflineData.Instance}}"
										EditValue="{Binding Customer.VisitSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
										<dxmvvm:Interaction.Behaviors>
											<dxmvvm:EventToCommand
												EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
												PassEventArgsToCommand="True"
												Command="{Binding ComboBoxClickCommand}" />
										</dxmvvm:Interaction.Behaviors>
									</dxe:ComboBoxEdit>
								</dxlc:LayoutItem>
								<dxlc:LayoutItem>
									<dxe:TextEdit
										NullText="{DynamicResource Address}"
										MaxLength="254"
										IsReadOnly="{Binding Customer.Id, Converter={StaticResource NumericToBoolean}}"
										EditValue="{Binding Customer.Address, Mode=TwoWay}"
										GotFocus="Ru_GotFocus" />
								</dxlc:LayoutItem>
								<dxlc:LayoutItem>
									<dxe:TextEdit
										MaskType="RegEx"
										Mask="(\w|[\.\-])+@(\w|[\-]+\.)*(\w|[\-]){2,63}\.[a-zA-Z]{2,4}"
										MaskUseAsDisplayFormat="True"
										ShowError="False"
										NullText="{DynamicResource Email}"
										MaxLength="254"
										IsReadOnly="{Binding Customer.Id, Converter={StaticResource NumericToBoolean}}"
										EditValue="{Binding Customer.Email, Mode=TwoWay}"
										GotFocus="En_GotFocus" />
								</dxlc:LayoutItem>
								<dxlc:LayoutGroup
									ItemSpace="0"
									Orientation="Horizontal">
									<dxlc:LayoutItem
										ElementSpace="0"
										Padding="0">
										<dxe:TextEdit
											NullText="{DynamicResource Phone2}"
											HorizontalAlignment="Stretch"
											EditValue="{Binding Customer.Phone2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
											<dxmvvm:Interaction.Behaviors>
												<extensions:SelectAllOnMouseUpBehavior />
											</dxmvvm:Interaction.Behaviors>
											<FrameworkElement.Style>
												<Style
													BasedOn="{StaticResource PhoneInput}"
													TargetType="{x:Type dxe:TextEdit}">
													<Setter
														Property="dxe:BaseEdit.IsReadOnly"
														Value="True" />
													<Setter
														Property="dxe:TextEdit.Mask"
														Value="{Binding SelectedItem.Mask, ElementName=Phone2Mask}" />
													<Style.Triggers>
														<DataTrigger
															Value="0"
															Binding="{Binding Customer.Id}">
															<Setter
																Property="dxe:BaseEdit.IsReadOnly"
																Value="False" />
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</FrameworkElement.Style>
										</dxe:TextEdit>
									</dxlc:LayoutItem>
									<dxlc:LayoutItem
										Margin="0"
										ElementSpace="0"
										Padding="0"
										Width="70">
										<dxe:ComboBoxEdit
											Name="Phone2Mask"
											ValueMember="Id"
											DisplayMember="Name"
											EditValue="{Binding Customer.Phone2Mask, Mode=TwoWay}"
											ItemsSource="{Binding PhoneOptions}" />
									</dxlc:LayoutItem>
								</dxlc:LayoutGroup>
							</dxlc:LayoutGroup>
						</dxlc:LayoutGroup>
						<dxlc:LayoutGroup
							Header="{DynamicResource Ur}"
							Orientation="Vertical"
							Visibility="{Binding Customer.IsUr, Converter={StaticResource BooleanToVisibilityConverter}}">
							<dxlc:LayoutGroup
								Orientation="Horizontal">
								<dxlc:LayoutItem
									Label="{DynamicResource Company}">
									<dxe:TextEdit
										NullText="{DynamicResource UrName}"
										MaxLength="254"
										EditValue="{Binding Customer.UrName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
										<dxmvvm:Interaction.Behaviors>
											<dxmvvm:EventToCommand
												EventTriggerBase_x0060_1.EventName="EditValueChanged"
												Command="{Binding SearchClientMatchCommand}" />
										</dxmvvm:Interaction.Behaviors>
									</dxe:TextEdit>
								</dxlc:LayoutItem>
								<dxlc:LayoutItem
									Label="{DynamicResource Address}">
									<dxe:TextEdit
										MaxLength="254"
										EditValue="{Binding Customer.Address, Mode=TwoWay}" />
								</dxlc:LayoutItem>
								<dxlc:LayoutItem
									Label="{DynamicResource Email}">
									<dxe:TextEdit
										MaxLength="254"
										EditValue="{Binding Customer.Email, Mode=TwoWay}" />
								</dxlc:LayoutItem>
								<dxlc:LayoutGroup
									ItemSpace="0"
									Padding="0"
									Orientation="Horizontal">
									<dxlc:LayoutItem
										ElementSpace="0"
										Padding="0">
										<dxe:TextEdit
											NullText="{DynamicResource Phone}"
											Style="{StaticResource PhoneInput}"
											Mask="{Binding SelectedItem.Mask, ElementName=PhoneUrMask}"
											EditValue="{Binding Customer.Phone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
											<dxmvvm:Interaction.Behaviors>
												<local:TabOnSpaceBehavior />
												<extensions:SelectAllOnMouseUpBehavior />
												<dxmvvm:EventToCommand
													EventTriggerBase_x0060_1.EventName="EditValueChanged"
													Command="{Binding SearchClientMatchCommand}" />
											</dxmvvm:Interaction.Behaviors>
										</dxe:TextEdit>
									</dxlc:LayoutItem>
									<dxlc:LayoutItem
										Margin="0"
										ElementSpace="0"
										Padding="0"
										Width="70">
										<dxe:ComboBoxEdit
											Name="PhoneUrMask"
											ValueMember="Id"
											DisplayMember="Name"
											EditValue="{Binding Customer.PhoneMask, Mode=TwoWay}"
											ItemsSource="{Binding PhoneOptions}" />
									</dxlc:LayoutItem>
								</dxlc:LayoutGroup>
							</dxlc:LayoutGroup>
							<dxlc:LayoutItem>
								<dxe:ComboBoxEdit
									NullText="{DynamicResource VisitSource}"
									DisplayMember="name"
									ValueMember="id"
									IsReadOnly="{Binding Customer.Id, Converter={StaticResource NumericToBoolean}}"
									ItemsSource="{Binding VisitSources, Source={x:Static objects:OfflineData.Instance}}"
									EditValue="{Binding Customer.VisitSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
									<dxmvvm:Interaction.Behaviors>
										<dxmvvm:EventToCommand
											EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
											PassEventArgsToCommand="True"
											Command="{Binding ComboBoxClickCommand}" />
									</dxmvvm:Interaction.Behaviors>
								</dxe:ComboBoxEdit>
							</dxlc:LayoutItem>
						</dxlc:LayoutGroup>
					</dxlc:LayoutGroup>
					<dxlc:LayoutGroup
						IsCollapsible="True"
						Header="{DynamicResource CustomerMatch}"
						View="GroupBox"
						Visibility="{Binding IsMatchClientVisible, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
						<dxlc:LayoutItem
							MaxHeight="200">
							<Border
								BorderThickness="1"
								BorderBrush="#FFA9A9A9">
								<dxg:GridControl
									Height="190"
									Style="{StaticResource DeDefTable}"
									ItemsSource="{Binding ClientsMatch}"
									SelectedItem="{Binding SelectedMatch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
									<dxg:GridColumn
										FieldName="ID"
										HorizontalHeaderContentAlignment="Center"
										Width="100"
										VisibleIndex="0"
										Binding="{Binding ClientId}">
										<dxg:ColumnBase.EditSettings>
											<dxe:TextEditSettings
												HorizontalContentAlignment="Center"
												MaskType="Numeric"
												Mask="d6"
												MaskUseAsDisplayFormat="True" />
										</dxg:ColumnBase.EditSettings>
									</dxg:GridColumn>
									<dxg:GridColumn
										Width="20*"
										FieldName="{DynamicResource FullName++}"
										HorizontalHeaderContentAlignment="Center"
										Binding="{Binding FioOrUrName}" />
									<dxg:GridColumn
										AllowPrinting="False"
										Width="50"
										FieldName="{DynamicResource Type}"
										HorizontalHeaderContentAlignment="Center"
										Binding="{Binding ClientType, Converter={StaticResource ClientTypeToPictureConverter}}">
										<dxg:ColumnBase.EditSettings>
											<dxe:ImageEditSettings
												HorizontalContentAlignment="Center"
												MaxWidth="16"
												VerticalContentAlignment="Center"
												ShowMenu="False" />
										</dxg:ColumnBase.EditSettings>
									</dxg:GridColumn>
									<dxg:GridColumn
										AllowPrinting="False"
										Width="110"
										FieldName="{DynamicResource Label8}"
										HorizontalHeaderContentAlignment="Center"
										Binding="{Binding RepairsCount, Mode=OneWay}">
										<dxg:ColumnBase.EditSettings>
											<dxe:TextEditSettings
												HorizontalContentAlignment="Center" />
										</dxg:ColumnBase.EditSettings>
									</dxg:GridColumn>
									<dxg:GridColumn
										Width="5*"
										FieldName="{DynamicResource Phone}"
										HorizontalHeaderContentAlignment="Center"
										Binding="{Binding ClientPhone}">
										<dxg:ColumnBase.EditSettings>
											<dxe:TextEditSettings
												HorizontalContentAlignment="Center" />
										</dxg:ColumnBase.EditSettings>
									</dxg:GridColumn>
									<dxg:GridControl.View>
										<dxg:TableView
											IsSynchronizedWithCurrentItem="True"
											ShowTotalSummary="False"
											AllowScrollAnimation="True"
											NavigationStyle="Row"
											ColumnFilterPopupMode="Excel"
											AllowEditing="False"
											AllowGrouping="False"
											AllowColumnMoving="True"
											ShowGroupPanel="False"
											ShowColumnHeaders="True"
											AllowMoveColumnToDropArea="False"
											ShowSearchPanelMode="Never"
											ShowBandsPanel="True"
											ShowIndicator="False"
											AllowBestFit="True"
											AllowColumnFiltering="False"
											ShowSelectionRectangle="False"
											ShowFixedTotalSummary="False"
											SummariesIgnoreNullValues="True"
											RowMinHeight="{Binding Employee.UiSettings.RowHeight, Source={x:Static objects:OfflineData.Instance}}"
											FontSize="{Binding Employee.UiSettings.FontSize, Source={x:Static objects:OfflineData.Instance}}">
											<dxmvvm:Interaction.Behaviors>
												<dxmvvm:EventToCommand
													EventTriggerBase_x0060_1.EventName="RowDoubleClick"
													Command="{Binding ClientMatchClickCommand}" />
											</dxmvvm:Interaction.Behaviors>
										</dxg:TableView>
									</dxg:GridControl.View>
								</dxg:GridControl>
							</Border>
						</dxlc:LayoutItem>
					</dxlc:LayoutGroup>
					<dxlc:LayoutGroup
						Header="{DynamicResource DeviceInfo}"
						View="GroupBox"
						Orientation="Vertical">
						<FrameworkElement.Resources>
							<ResourceDictionary>
								<dxe:TokenComboBoxStyleSettings
									AllowEditTokens="True"
									NewTokenPosition="Far"
									EnableTokenWrapping="True"
									x:Key="OrderInfoTokenComboBox" />
							</ResourceDictionary>
						</FrameworkElement.Resources>
						<dxlc:LayoutGroup
							Orientation="Horizontal"
							VerticalAlignment="Top">
							<dxlc:LayoutItem
								VerticalAlignment="Stretch"
								Label="{DynamicResource Fault}"
								LabelPosition="Top">
								<dxe:ComboBoxEdit
									TextWrapping="Wrap"
									StyleSettings="{StaticResource OrderInfoTokenComboBox}"
									AllowDefaultButton="True"
									ClosePopupOnLostFocus="True"
									AutoComplete="True"
									ImmediatePopup="False"
									ItemsSource="{Binding FaultList}"
									EditValue="{Binding SelectedFaults, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
									<dxmvvm:Interaction.Behaviors>
										<dxmvvm:EventToCommand
											EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
											PassEventArgsToCommand="True"
											Command="{Binding ComboBoxClickCommand}" />
									</dxmvvm:Interaction.Behaviors>
								</dxe:ComboBoxEdit>
							</dxlc:LayoutItem>
							<dxlc:LayoutItem
								VerticalAlignment="Stretch"
								Label="{DynamicResource Complect}"
								LabelPosition="Top">
								<dxe:ComboBoxEdit
									StyleSettings="{StaticResource OrderInfoTokenComboBox}"
									AllowDefaultButton="True"
									ClosePopupOnLostFocus="True"
									ItemsSource="{Binding ComplectList}"
									EditValue="{Binding SelectedComplect, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
									<dxmvvm:Interaction.Behaviors>
										<dxmvvm:EventToCommand
											EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
											PassEventArgsToCommand="True"
											Command="{Binding ComboBoxClickCommand}" />
									</dxmvvm:Interaction.Behaviors>
								</dxe:ComboBoxEdit>
							</dxlc:LayoutItem>
							<dxlc:LayoutItem
								VerticalAlignment="Stretch"
								Label="{DynamicResource Look}"
								LabelPosition="Top">
								<dxe:ComboBoxEdit
									StyleSettings="{StaticResource OrderInfoTokenComboBox}"
									AllowDefaultButton="True"
									ClosePopupOnLostFocus="True"
									ItemsSource="{Binding LookList}"
									EditValue="{Binding SelectedLook, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
									<dxmvvm:Interaction.Behaviors>
										<dxmvvm:EventToCommand
											EventTriggerBase_x0060_1.EventName="PreviewMouseLeftButtonDown"
											PassEventArgsToCommand="True"
											Command="{Binding ComboBoxClickCommand}" />
									</dxmvvm:Interaction.Behaviors>
								</dxe:ComboBoxEdit>
							</dxlc:LayoutItem>
						</dxlc:LayoutGroup>
						<dxlc:LayoutGroup
							Orientation="Horizontal">
							<dxlc:LayoutItem>
								<dxe:TextEdit
									MaxHeight="150"
									NullText="{DynamicResource ExtNotes}"
									HorizontalContentAlignment="Left"
									VerticalContentAlignment="Top"
									AcceptsReturn="True"
									TextWrapping="Wrap"
									EditValue="{Binding Repair.ext_notes, Mode=TwoWay}"
									GotFocus="Ru_GotFocus" />
							</dxlc:LayoutItem>
							<dxlc:LayoutItem>
								<dxe:TextEdit
									MaxHeight="150"
									NullText="{DynamicResource IntComment}"
									VerticalContentAlignment="Top"
									HorizontalAlignment="Stretch"
									AcceptsReturn="True"
									TextWrapping="Wrap"
									EditValue="{Binding IntComment, Mode=TwoWay}"
									GotFocus="Ru_GotFocus" />
							</dxlc:LayoutItem>
						</dxlc:LayoutGroup>
					</dxlc:LayoutGroup>
					<dxlc:LayoutGroup
						Header="{DynamicResource WorksAndParts}"
						View="GroupBox"
						Visibility="{Binding Repair.quick_repair, Converter={StaticResource BooleanToVisibilityConverter}}">
						<dxlc:LayoutItem
							MaxHeight="300">
							<worksAndParts:WpView
								Padding="0"
								MinHeight="120"
								DataContext="{Binding WPExpress}" />
						</dxlc:LayoutItem>
					</dxlc:LayoutGroup>
					<dxlc:LayoutGroup
						Header="{DynamicResource Finances}"
						View="GroupBox"
						Orientation="Horizontal">
						<dxlc:LayoutItem
							HorizontalAlignment="Left"
							Label="{DynamicResource ToPay}"
							Visibility="{Binding Repair.quick_repair, Converter={StaticResource BooleanToVisibilityConverter}}">
							<StackPanel
								Orientation="Horizontal">
								<dxe:TextEdit
									IsReadOnly="True"
									Width="80"
									Margin="5,0,0,0"
									EditValue="{Binding TotalAmount, Mode=OneWay}" />
								<CheckBox
									Content="{DynamicResource PayCheck}"
									Margin="10,0,0,0"
									IsChecked="{Binding PayCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
								<dx:SimpleButton
									Content="{DynamicResource Issue}"
									Margin="5,0,0,0"
									Command="{Binding MakeQuickOrderCommand}" />
							</StackPanel>
						</dxlc:LayoutItem>
						<dxlc:LayoutGroup
							HorizontalAlignment="Left"
							Orientation="Horizontal"
							Visibility="{Binding Repair.quick_repair, Converter={dx:BooleanToVisibilityConverter Invert=True}}">
							<dxlc:LayoutItem
								HorizontalAlignment="Left">
								<StackPanel
									Orientation="Horizontal">
									<CheckBox
										Name="CheckBoxPrePaid"
										Content="{DynamicResource IsPrepaid}"
										Style="{StaticResource DefCheckBox}"
										IsChecked="{Binding Repair.is_prepaid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
									<ComboBox
										Margin="5,0,0,0"
										DisplayMemberPath="Name"
										SelectedValuePath="Id"
										Width="150"
										IsEnabled="{Binding Path=IsChecked, ElementName=CheckBoxPrePaid}"
										ItemsSource="{Binding PrePaidTypes}"
										SelectedValue="{Binding Repair.prepaid_type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
									<dxe:TextEdit
										Margin="5,0,0,0"
										Text="0"
										Width="100"
										EditValue="{Binding Repair.prepaid_summ, Mode=TwoWay}">
										<dxmvvm:Interaction.Behaviors>
											<extensions:SelectAllOnMouseUpBehavior />
										</dxmvvm:Interaction.Behaviors>
										<FrameworkElement.Style>
											<Style
												BasedOn="{StaticResource NumericTextBox}"
												TargetType="{x:Type dxe:TextEdit}">
												<Setter
													Property="IsEnabled"
													Value="False" />
												<Style.Triggers>
													<DataTrigger
														Value="True"
														Binding="{Binding Path=IsChecked, ElementName=CheckBoxPrePaid}">
														<Setter
															Property="IsEnabled"
															Value="True" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</FrameworkElement.Style>
									</dxe:TextEdit>
									<CheckBox
										Name="checkBoxPreAgreedAmount"
										Margin="5,0,0,0"
										Content="{DynamicResource PreAgreedAmount}"
										ContentStringFormat="{}{0}:"
										Style="{StaticResource DefCheckBox}"
										IsChecked="{Binding Repair.is_pre_agreed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
									<dxe:TextEdit
										Margin="5,0,0,0"
										Width="100"
										EditValue="{Binding Repair.pre_agreed_amount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
										<dxmvvm:Interaction.Behaviors>
											<extensions:SelectAllOnMouseUpBehavior />
										</dxmvvm:Interaction.Behaviors>
										<FrameworkElement.Style>
											<Style
												BasedOn="{StaticResource NumericTextBox}"
												TargetType="{x:Type dxe:TextEdit}">
												<Setter
													Property="IsEnabled"
													Value="False" />
												<Style.Triggers>
													<DataTrigger
														Value="True"
														Binding="{Binding Path=IsChecked, ElementName=checkBoxPreAgreedAmount}">
														<Setter
															Property="IsEnabled"
															Value="True" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</FrameworkElement.Style>
									</dxe:TextEdit>
									<dx:SimpleButton
										Content="{DynamicResource Accept}"
										Margin="5,0,0,0"
										Command="{Binding MakeOrderCommand}" />
								</StackPanel>
							</dxlc:LayoutItem>
						</dxlc:LayoutGroup>
					</dxlc:LayoutGroup>
				</dxlc:LayoutControl>
			</Grid>
		</dx:BackgroundPanel>
	</DockPanel>
</UserControl>
